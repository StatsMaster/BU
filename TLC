

/****************************//****************************//****************************/
/****************************//****************************//****************************/
/****************************//****************************//****************************/

/* Last Updated:  2015-02-11 */

/*
  __  __             _   _     _         _______ _      _____   _____                       _   
 |  \/  |           | | | |   | |       |__   __| |    / ____| |  __ \                     | |  
 | \  / | ___  _ __ | |_| |__ | |_   _     | |  | |   | |      | |__) |___ _ __   ___  _ __| |_ 
 | |\/| |/ _ \| '_ \| __| '_ \| | | | |    | |  | |   | |      |  _  // _ \ '_ \ / _ \| '__| __|
 | |  | | (_) | | | | |_| | | | | |_| |    | |  | |___| |____  | | \ \  __/ |_) | (_) | |  | |_ 
 |_|  |_|\___/|_| |_|\__|_| |_|_|\__, |    |_|  |______\_____| |_|  \_\___| .__/ \___/|_|   \__|
                                  __/ |                                   | |                   
                                 |___/                                    |_|                   
*/

/****************************//* Tracking Loyal Customers *//****************************/

/****************************//****************************//****************************/
/****************************//****************************//****************************/
/****************************//****************************//****************************/

%let LIBNM = temp;

/* Starting Period for Building Trends */

%let Period_Of_Interest = '01DEC12' ;
%let Period_Of_Interest = '01JUL14' ;
%let Period_Of_Interest = '01DEC12' ;
%let Period_Of_Interest = '01OCT14' ;
%let Period_Of_Interest = '01DEC12' ;

%let Period_Of_Interest = '01NOV14' ;

%let runday = "01MAY2015"D ;

PROC SQL ;
	connect to oracle (user = &U. password = &P. path= 'NEWDW01.WORLD');
		create table &LIBNM..TLC_Table_A as select * from connection to oracle ( select 
			b.mid	  						as MID , 
			b.period  						as Period ,
			z.sponsorid 					as Client_Group ,
			s.assocnumber					as Assc_Num ,
			nvl(s.siccode,'0000') 			as SIC_Code ,
			z.Channel						as Channel ,
			z.rdc							as Sub_Channel ,
			z.Route							as SC_Route ,
			coalesce(p.group_  ,'Null')  	as Rela_Type ,
			coalesce(p.rel_long,'Null')  	as Rela ,
			s.DBANAME						as DBA_NAME	 ,
			s.merchstatus_ecp				as STATUS ,
			s.first_deposit_date 			as FDD ,
			s.last_deposit_date  			as LDD ,
			s.date_opened 		 			as OPD ,
			s.date_closed		 			as CLD ,
			c.closecode						as Close_Code ,
			x.category						as Close_Code_CAT ,
			x.description					as Close_Code_DES ,
			s.FEDTAXID ,			 
			s.FUNDINGABA ,
			s.FUNDINGDDA ,
			s.REPCODE ,
			s.projmthvol 	,
			i.repcode, 
			i.REPNAME 		as REP_NAME , 
			i.channel 		as REP_Channel,
			g.city 			as City  , 
			g.state_cd		as State , 
			g.zip_cd		as Zip   ,

				
			nvl(b.trancount,0) 	as TRN  , 
			nvl(b.netvolume,0) 	as VOL  , 

		   nvl(b.stm_discount,	 0) + nvl(b.stm_surcharge,		0) 		
		 + nvl(b.stm_authrevenue,0)	+ nvl(b.stm_ind_plan,		0) 	+ nvl(b.stm_data_cap,		0) 		
		 - nvl(b.tsys_intchg,	 0) - nvl(b.assesments,		 	0) 			
		 + nvl(b.dscv_discount,	 0) - nvl(b.dscv_interchange,	0) 	- nvl(b.dscv_assessments,	0) 
		 + nvl(b.pin_db_discount,0) - nvl(b.pin_db_interchange, 0)	- nvl(b.pin_db_assessments,	0) 	- nvl(b.pin_db_switch_fee,0) 
										as DIA ,
		   nvl(b.stm_discount,	0) 		as D ,
		   nvl(b.stm_feerevenue,0) - nvl(b.pos_fee,0)
		   								as O , 
		   nvl(b.STM_INCOME,0)			as CtC ,

			nvl(r.trancount,0) 			as RTM_TRN  , 
			nvl(r.netvolume,0) 			as RTM_VOL  , 

		   nvl(r.stm_discount,	 0) + nvl(r.stm_surcharge,		0) 		
		 + nvl(r.stm_authrevenue,0)	+ nvl(r.stm_ind_plan,		0) 	+ nvl(r.stm_data_cap,		0) 		
		 - nvl(r.tsys_intchg,	 0) - nvl(r.assesments,		 	0) 			
		 + nvl(r.dscv_discount,	 0) - nvl(r.dscv_interchange,	0) 	- nvl(r.dscv_assessments,	0) 
		 + nvl(r.pin_db_discount,0) - nvl(r.pin_db_interchange, 0)	- nvl(r.pin_db_assessments,	0) 	- nvl(r.pin_db_switch_fee,0) 
										as RTM_DIA ,
		   nvl(r.stm_discount,	 0) 	as RTM_D ,

		   nvl(r.stm_feerevenue,0) - nvl(r.pos_fee,0)
		   								as RTM_O  ,
		   nvl(r.STM_INCOME,	0)		as RTM_CtC 
	
		from 		browser.merch_tran_info 		b 
		inner join 	bsnsdevl.mid_owner 				z on b.mid = z.mid
		left  join	browser.roll_mti				r on b.mid = r.mid and b.period = r.period
		left  join	bsnsdevl.mid_relationship 		p on b.mid = p.mid
		left  join  browser.merch_demo_info_master	s on b.mid = s.mid
		left  join  dw.merchantmaster				c on b.mid = c.mid 
		left  join  dw.close_code_description		x on c.closecode = x.close_code 
		left  join	BSNSDEVL.REPINFO				i on s.repcode = i.repcode
		left  join	aep.merch_mid					d on b.mid = d.mid
		left  join	aep.merch_mid_addr 				g on d.mid_tag = g.mid_tag and g.addr_type_tag = '2'

		where 		b.period >= &Period_Of_Interest. 
		and			z.rdc <> 'POWERTRACK' 
		and 		z.sponsorid < '0026' ) ;
	disconnect from oracle ;
quit;

data    &LIBNM..TLC_Table_A ; 
 Retain MID P DIAO  ;
 set    &LIBNM..TLC_Table_A ;

 if sic_code	in ('6010', '6011') 	/* Remove Cash Advance */
 or Client_Group = '0006' 			    /* Remove Power Track */	
 or rela in ('TNT AMERICAN PROMOTIONAL EVENTS', 'AUCTION PAY', 'PAMS LUNCHROOM PREMIERES')  	
 then Delete ;

 P = Datepart(Period) ; format p date9. ; 

 DIAO = sum(dia,o) ;
 RTM_DIAO = sum(rtm_dia, rtm_o) ;

 /* discount cost over the customers VOL */

 DoV     =     abs(D)   /     abs(VOL) ; 		if DoV 			< 0 then     DoV = 0 ;
 RTM_DoV = abs(RTM_D)   / abs(RTM_VOL) ; 		if RTM_DoV		< 0 then RTM_DoV = 0 ;

 /* total cost over the customers VOL */

 CoV	 =   abs(CtC)   /     abs(VOL) ;		if CoV			< 0 then	 CoV = 0;
 RTM_CoV = abs(RTM_CtC) / abs(RTM_VOL) ;		if RTM_CoV		< 0 then RTM_CoV = 0;

 /* total 'O' fees over the customers VOL */

 OoV	 =     abs(O)   /     abs(VOL) ;		if 	   OoV		< 0  then	  OoV = 0;
 RTM_OoV = abs(RTM_O)   / abs(RTM_VOL) ;		if RTM_OoV		< 0  then RTM_OoV = 0;

 /* HOA - Home Owners */

 if (client_group = '0003' and assc_num = '40483') then HOA = 1 ; else HOA = 0 ;   

 /* STP */

 if (assc_num = '40466')						   then STP = 1 ; else STP = 0 ;	
 
  /* Creat the Partner Grouping from channel/sub-channel/sc-route 
 'SANA', 'SANC', 'SANR', 'SAN'
  */

  if SC_ROUTE in ('CSAG', 'FISA', 'AGNT') 
  then Agent_Bank = 1 ; else Agent_Bank = 0 ; 

  		if sub_channel  = 'USB' 					then Partner_Group = '1 USB' ;
 else	if channel 		= 'CBS' and Agent_Bank = 0 	then Partner_Group = '5 CBS' ;
 else 	if channel 		= 'MSP'						then Partner_Group = '4 MSP' ;
 else	if sub_channel	= 'REGIONS' 				then Partner_Group = '2 REG' ;
 else	if sub_channel	= 'BOW'						then Partner_Group = '3 BOW' ;
 else	if channel = 'ALLI' and sub_channel ='KMS'	then Partner_Group = '6 KMS' ;
 else	if sub_channel in ('DIR_COSTCO','COSTCO') 	then Partner_Group = '7 CST' ;
 else													 Partner_Group = '8 N/A' ;	

 /* Close Code Grouping for VOC Analysis (even though TLC does not use close dates or codes) */

 			if close_code = '56' 					then VOC_CC_GRP = 'PCI';
  	else	if close_code in 
			('23', '24', '30', '58', '34') 			then VOC_CC_GRP = 'RNF';
  	else	if close_code in 
			('21', '26', '28', '29', '36', '37') 	then VOC_CC_GRP = 'URG';
	else												 VOC_CC_GRP = 'OTH';

 /* 
	Tenure from the Open Data to the current month 
	An alternative measurement could be from the FDD to the current month
 */

  TID = floor ((intck('day',datepart(OPD),(intnx('month',P,0,'end'))) - (day(intnx('month',P,0,'end')) < day(datepart(OPD))))) ;    
  TIY = TID /365 ;
  TiM = TIY*12   ;
  		if TIY < 1  then TIY_GRP = '1 Under 1 Year ' ;
 else	if TIY < 2  then TIY_GRP = '2  1 - 2  Years' ;
 else	if TIY < 4  then TIY_GRP = '3  3 - 4  Years' ;
 else	if TIY < 6  then TIY_GRP = '4  5 - 6  Years' ;
 else	if TIY < 8  then TIY_GRP = '5  7 - 8  Years' ;
 else	if TIY < 10 then TIY_GRP = '6  9 - 10 Years' ;
 else	if TIY < 20 then TIY_GRP = '7 10 - 20 Years' ;
 else					 TIY_GRP = '8 21+ Years'     ;

/* ePOS Channel Grouping */

 Format ePOS_CHN $35.;
		if channel= 'ALLI' and sub_channel = 'USB' 		then ePOS_CHN = '01 ALLI - USB';
 else	if channel= 'ALLI' 						   		then ePOS_CHN = '02 ALLI - OTH';
 else	if channel= 'MSP' 						   		then ePOS_CHN = '03 MSP';
 else	if channel= 'ASSN' and sub_channel = 'VERIZON' 	then ePOS_CHN = '04 ASSN - Verizon';
 else	if channel= 'ASSN' and sub_channel = 'COSTCO' 	then ePOS_CHN = '05 ASSN - Costco';
 else														 ePOS_CHN = '06 Channel Other';

run ;


/*
proc sort data = TLC_Table_A NoDupKey ; 
	by mid p ; 
run ;
*/


proc sql ; 
	select compress(put(Count(Distinct P),12.0)) into :P_CNT  	from &LIBNM..TLC_Table_A ; 
	Select Distinct P into :PRD1 - :PRD&P_CNT. 					from &LIBNM..TLC_Table_A ; 
Quit ;


/* -------------------- *//* --------- *//* -------------------- */
/* -------------------- *//* --------- *//* -------------------- */
/* Last Updated: 2014-10-20 */
/*
              _     _ _ _   _                   _   ______ _                                               
     /\      | |   | (_) | (_)                 | | |  ____| |                                              
    /  \   __| | __| |_| |_ _  ___  _ __   __ _| | | |__  | | __ _  __ _ ___                               
   / /\ \ / _` |/ _` | | __| |/ _ \| '_ \ / _` | | |  __| | |/ _` |/ _` / __|                              
  / ____ \ (_| | (_| | | |_| | (_) | | | | (_| | | | |    | | (_| | (_| \__ \                              
 /_/    \_\__,_|\__,_|_|\__|_|\___/|_| |_|\__,_|_| |_|    |_|\__,_|\__, |___/                              
       _____               _____ __  __ ____     _____ _   _ _____  __/ | _____ _______                    
      |  __ \             / ____|  \/  |  _ \   |_   _| \ | |  __ \|___/ |  __ \__   __|                   
   ___| |__) |__  ___    | (___ | \  / | |_) |    | | |  \| | |  | |     | |__) | | |_   _ _ __   ___      
  / _ \  ___/ _ \/ __|    \___ \| |\/| |  _ <     | | | . ` | |  | |     |  ___/  | | | | | '_ \ / _ \     
 |  __/ |  | (_) \__ \_   ____) | |  | | |_) |   _| |_| |\  | |__| |     | |      | | |_| | |_) |  __/  _  
  \___|_|   \___/|___( ) |_____/|_|  |_|____( ) |_____|_| \_|_____( )    |_|      |_|\__, | .__/ \___| ( ) 
                     |/                     |/                    |/                  __/ | |          |/  
                                                                                     |___/|_|              
*/
/* -------------------- *//* --------- *//* -------------------- */
/* -------------------- *//* --------- *//* -------------------- */


/* SMB */

/*
proc sql ;
 connect to oracle (user = &U. password = &P. path= 'NEWDW01.WORLD') ;
 create table SMB_1 as select * from connection to oracle
 (select distinct a.mid , a.SMB from bsnsdevl.MID_to_REL_ALL_2014_09 a ) ;
 create table SMB_2 as select * from connection to oracle 
 (select distinct a.mid , a.SMB from BSNSDEVL.MID_TO_REL_ALL_2013_09 a ) ;
 disconnect from oracle ;
quit;

data SMB_MID; set SMB_1 SMB_2 ; run;
proc sort data = smb_mid out = smb_mid NoDupKey ; by MID ; run ; 
proc datasets lib = work NoList NoDetails; delete SMB_1 SMB_2 ; quit ;
*/

/* IND - The MIS and MISS */


proc sql;
	connect to oracle (user = &U. password = &P. path= 'NEWDW01.WORLD');
	Create table MID_SIC as select * from connection to oracle ( 
	select	Distinct MID, SICCode
	from  	browser.merch_demo_info_master );
	disconnect from oracle;
quit;

proc sql;
	create table loc_srs.MID_SIC as select a.*, b.*
	from MID_SIC a left join loc_srs.MIS b on a.siccode = b.siccode; 
quit;

proc sort data = loc_srs.MID_SIC NoDupKey; by MID; Run;

proc datasets lib=work NoDetails NoList;
	delete MID_SIC ;
quit;


/* ePOS */

/* Create ePOS Flag, an account with either Talech or NCR Silver */


proc sql ;
 connect to oracle (user = &U. password = &P. path= 'NEWDW01.WORLD') ;
 create table NCRS as select * from connection to oracle
 (select distinct a.mid , 1 as NCRS from BSNSDEVL.NCR_MIDs a ) ;
 create table TALEC as select * from connection to oracle 
 (select distinct a.mid , 1 as TALC 
	from aep.equipmnt_merequip 	a					
	where upper(model) like '%TALECH%'						
	and mid not in ('8024059688','234567890','345678901'				
	,'8024586557','8024586771','8024599592','8024586664','8022885779','8024115779')) ;
 disconnect from oracle ;	
quit;

data two ; set ncrs talec; run;

proc sql;
	create table ePOS as select 
		MID, 
		1					  as ePOS ,
		coalesce(max(NCRS),0) as NCRS ,
		coalesce(max(TALC),0) as TALC 
	from two 
	group by mid;
quit;

proc datasets library=work NoList NoDetails ;
	delete two ncrs talec;
quit;


/* CAM, CAM-KMS */


proc sql;
	create table CAM_BoB 		as select distinct MID, 1 as CAM_BoB  	 from BSNSDEVL.CAM_WORKING_DATA ;
	create table CAM_KMS_BoB 	as select distinct MID, 1 as CAM_KMS_BoB from BSNSDEVL.KMS_TO_ASSIGN ;
	create table CAM_2015 		as select distinct MID, 1 as CAM_2015, ASSIGN_REP, MANAGER from bsnsdevl.cam_plan_2_2015;
quit;


/* Current PType */

/*
PROC SQL ;
	connect to oracle (user = &U. password = &P. path= 'NEWDW01.WORLD');
	create table PType as select * from connection to oracle( 
	select Distinct  
	SPOEMID as MID 			,
	PRICING_TYPE  			,
	Channel 
	from RBAILEY.MODEL_2015 );
	disconnect from oracle ;
quit ;*/

PROC SQL ;
	connect to oracle (user = &U. password = &P. path= 'NEWDW01.WORLD');
	create table PType_CURR as select * from connection to oracle( 
	select Distinct  
	SPOEMID as MID ,
	PRICING_TYPE ,
	Channel 
	from RBAILEY.MODEL_2015 );
	disconnect from oracle ;
quit ;

PROC SQL ;
	connect to oracle (user = &U. password = &P. path= 'NEWDW01.WORLD');
	create table PType_OLD as select * from connection to oracle( 
	select Distinct  
	SPOEMID as MID 			,
	PRICING_TYPE  			,
	Channel 
	from RBAILEY.MODEL_APR13 );
	disconnect from oracle ;
quit ;

data PType ; set PType_CURR PType_OLD  ; run ;

proc sort data = PType NoDupKey; by MID; run;


/* Left Join all the flags to the TLC_A dataset */

/*
proc sql;
	create table TLC_Table_A as select a.*, 

	coalesce(b.SMB,1) 										as SMB  		,

	propcase(coalesceC(c.MRK_INSGT_SEGMENT,'UNKNOWN')) 		as MIS  		,
	propcase(coalesceC(c.MRK_INSGT_SUBSEGMENT,'UNKNOWN')) 	as MISS 		,

	coalesce(e.ePOS,0) 										as ePOS 		,
	coalesce(e.NCRS,0) 										as NCRS 		,
	coalesce(e.TALC,0) 										as TALC 		,

	coalesce(f.CAM_BoB, 0) 									as CAM_BoB 		,
	coalesce(g.CAM_KMS_BoB, 0) 								as CAM_KMS_BoB 	,

	coalesceC(p.PRICING_TYPE,"UNKN")						as PType 		,
	coalesceC(p.Channel,"UNKN")								as PT_Channel 

	from 		 TLC_Table_A 		a 
	left join 	 SMB_MID 			b on a.mid = b.mid 
	left join 	 loc_srs.MID_SIC 	c on a.mid = c.mid
	left join 	 ePOS 				e on a.mid = e.mid	
	left join	 CAM_BoB 			f on a.mid = f.mid 
	left join 	 CAM_KMS_BoB 		g on a.mid = g.mid 
	left join	 PType				p on a.mid = p.mid 

;
Quit;
*/

/*
proc datasets lib = work NoList NoDetails ;
	delete  
		SMB_MID 
		ePOS 
		CAM_BoB 
		CAM_KMS_BoB 
		PType ;
quit ;
*/


proc sort 
	data = &LIBNM..TLC_Table_A NoDupKey ; 
	by mid p ; 
run ;

%Macro TLC_RRU;
%do i = 1 %to  &P_CNT.;
%let T_NAME = TLC_THIS_MONTH_&i. ;

proc sql;
	create table &T_NAME. as select a.*, 

	propcase(coalesceC(c.MRK_INSGT_SEGMENT,'UNKNOWN')) 		as MIS  		,
	propcase(coalesceC(c.MRK_INSGT_SUBSEGMENT,'UNKNOWN')) 	as MISS 		,

	coalesce(e.ePOS,0) 										as ePOS 		,
	coalesce(e.NCRS,0) 										as NCRS 		,
	coalesce(e.TALC,0) 										as TALC 		,

	coalesce(f.CAM_BoB, 0) 									as CAM_BoB 		,
	coalesce(g.CAM_KMS_BoB, 0) 								as CAM_KMS_BoB 	,
	coalesce(x.CAM_2015, 0)									as CAM_2015		,	
	x.ASSIGN_REP 											as CAM_2015_REP	,
	x.MANAGER												as CAM_2015_MGR ,

	coalesceC(p.PRICING_TYPE,"UNKN")						as PType 		,
	coalesceC(p.Channel,"UNKN")								as PT_Channel 

	from 		 &LIBNM..TLC_Table_A 	a 
	left join 	 loc_srs.MID_SIC 		c on a.mid = c.mid
	left join 	 ePOS 					e on a.mid = e.mid	
	left join	 CAM_BoB 				f on a.mid = f.mid 
	left join 	 CAM_KMS_BoB 			g on a.mid = g.mid 
	left join	 PType					p on a.mid = p.mid 
	left join	 CAM_2015				x on a.mid = x.mid
	where a.p = "&&prd&i."D ;
quit;

proc sql;

/* #3a  Build the table of tax id counts */

	create table MULTI_TAX_ID as select  fedtaxid, Count(*) as TAX_CNT 
	from 	&T_Name.
	where 	coalesce(fedtaxid,'0') not in ('0', '999999999', '000000000','0000000000')  
	and		RELA_TYPE not in ('AIRLN', 'HOSP', 'RM', 'HCARE','STRAT') 
	Group by fedtaxid ;

/* #3b  Build the table of bank id counts */

	create table MULTI_DDA_ID as select compress(fundingaba||fundingdda) as BNK_ID,
 	Count(*) as BNK_CNT from &T_Name.
	where 	coalesce(compress(fundingaba||fundingdda),'0') ne '0' 
	and		RELA_TYPE not in ('AIRLN', 'HOSP', 'RM', 'HCARE','STRAT') 
	Group by compress(fundingaba||fundingdda) ;

/* #4  left join the tax counts to the base table */

	create table &T_Name. as select a.*, b.TAX_CNT 
	from &T_Name. a left join MULTI_TAX_ID b on a.fedtaxid = b.fedtaxid ;

quit;

proc sql; drop table MULTI_TAX_ID; quit;

/* #5  Create the bank ID match key on the base table */

data &T_Name.;
 set &T_Name.;
 BNK_ID = compress(fundingaba||fundingdda);
run;

/* #6  UNI QC */

proc sort data = &T_Name. NoDupKey; by mid; run;

/* 	#7  Seperate the MIDs into three groups 
	first, Managed relationships
	second, MIDs with tax counts great than one
	last, the remaining MIDS */

data 	SMB_ID_Managed 
		SMB_ID_FEDTAXID
		SMB_ID_OTHER;
set &T_Name.;
		if Rela_Type in ('AIRLN', 'HOSP', 'RM', 'HCARE','STRAT')  then Output SMB_ID_Managed ;
else	if TAX_CNT	> 1 then output SMB_ID_FEDTAXID ;
else output SMB_ID_OTHER;
run;

/* #8  For the remaining MIDs left join the bank count */

data SMB_ID_OTHER_1 SMB_ID_OTHER_2 
	 SMB_ID_OTHER_3 SMB_ID_OTHER_4
	 SMB_ID_OTHER_5 SMB_ID_OTHER_6
     SMB_ID_OTHER_7 SMB_ID_OTHER_8
	 SMB_ID_OTHER_9 SMB_ID_OTHER_10 ;
 set SMB_ID_OTHER ;
 random = ranuni(20120214);
      if random <= 0.10 then output SMB_ID_OTHER_1 ;
 else if random <= 0.20 then output SMB_ID_OTHER_2 ;
 else if random <= 0.30 then output SMB_ID_OTHER_3 ;
 else if random <= 0.40 then output SMB_ID_OTHER_4 ;
 else if random <= 0.50 then output SMB_ID_OTHER_5 ;
 else if random <= 0.60 then output SMB_ID_OTHER_6 ;
 else if random <= 0.70 then output SMB_ID_OTHER_7 ;
 else if random <= 0.80 then output SMB_ID_OTHER_8 ;
 else if random <= 0.90 then output SMB_ID_OTHER_9 ;
 else if random <= 1.00 then output SMB_ID_OTHER_10 ;
 drop random;
run;

%macro mini_loop;
%do j = 1 %to 10;
proc sql;
	create table BNK_ID_LIST as select distinct BNK_ID, BNK_CNT
	from MULTI_DDA_ID where BNK_ID in (select distinct bnk_id from SMB_ID_OTHER_&j.);

	create table SMB_ID_OTHER_&j. as select a.*, c.BNK_CNT  
	from SMB_ID_OTHER_&j. a  left join BNK_ID_LIST c on a.BNK_ID = c.BNK_ID;
quit;
%end;
proc sql; drop table BNK_ID_LIST; quit;
%mend;
%mini_loop

proc sql; drop table MULTI_DDA_ID; quit;

data SMB_ID_OTHER;
 set SMB_ID_OTHER_1 SMB_ID_OTHER_2 
	 SMB_ID_OTHER_3 SMB_ID_OTHER_4
	 SMB_ID_OTHER_5 SMB_ID_OTHER_6
     SMB_ID_OTHER_7 SMB_ID_OTHER_8
	 SMB_ID_OTHER_9 SMB_ID_OTHER_10;
run;

proc datasets lib = work NoDetails NoList; 
	Delete 
     SMB_ID_OTHER_1 SMB_ID_OTHER_2 
	 SMB_ID_OTHER_3 SMB_ID_OTHER_4
	 SMB_ID_OTHER_5 SMB_ID_OTHER_6
     SMB_ID_OTHER_7 SMB_ID_OTHER_8
	 SMB_ID_OTHER_9 SMB_ID_OTHER_10; 
quit;

/* #9  UNI QC */

proc sort data = SMB_ID_OTHER NoDupKey; by mid; run;

/* 
	#10 ID the MIDs Relationship and Relationship Type  

	a.) Stack the three datasets, managed, tax, other 
	b.) If the MID has a previously defined relationship, keep that rel info the same 
	c.) If the MID was found to have a tax ID greater than 1, use the fed tax ID as their relationship information
	d.) If the MID was found to have a bank ID greater than 1, use the aba/dda as their relationship information
	c.) last, if no info was found, the customer is assumed to be represented by a solo account
*/

data &T_Name. ;
 set SMB_ID_Managed 
	 SMB_ID_FEDTAXID
	 SMB_ID_OTHER ;

	 	if Rela_Type in ('AIRLN', 'HOSP', 'RM', 'HCARE','STRAT')  then
							do; rela_type =  rela_type; 	Relationship = Rela; 					 	end;   
 else	if TAX_CNT > 1 then do; rela_type = 'FEDTAXID'; 	Relationship = fedtaxid;					end;
 else 	if BNK_CNT > 1 and fundingaba ne '' and fundingdda ne ''
					   then do; rela_type = 'ABA_DDA';  Relationship = compress(fundingaba||fundingdda); end;
 else					    do; rela_type = 'MID'; 		Relationship = MID; 							 end;
 		if RELA_TYPE in ('AIRLN', 'HOSP', 'RM', 'HCARE','STRAT')  then ENT_Managed = 'Y'; else ENT_Managed ='N';
Run;

/* #11  Clean Up */

proc datasets lib = work NoDetails NoList; 
	Delete SMB_ID_Managed SMB_ID_FEDTAXID SMB_ID_OTHER ; 
quit;

/* #12  UNI QC */

proc sort data = &T_Name. NoDupKey; by mid; run;

proc sql;

/* #13  Build Relationship Level Measurements */

	create table Rela as select 
		Relationship ,
		Count(Distinct MID)				as Rel_MIDCNT ,	
		sum(coalesce(rtm_trn,0)) 		as Rel_BC_TRANCOUNT ,
		sum(coalesce(rtm_vol,0)) 		as Rel_BC_VOL , 
		sum(coalesce(rtm_dia,0)) 		as Rel_DIA ,
		sum(coalesce(rtm_diao,0)) 		as Rel_DIAO 
	from &T_Name.  
	group by Relationship;
quit;

proc sort data = &T_NAME. Out = Top;
	by Relationship descending rtm_vol ;
Run;

proc sort data = Top NoDupKey;
	by Relationship;
run;

data Top;
 set Top;
 Rel_Top_MID = 'Y';
run;

/* #14  Left join the CID bank card VOL */

proc sql;
	create table &T_Name. as select a.* , 
		b.Rel_MIDCNT ,	
		b.Rel_BC_TRANCOUNT ,
		b.Rel_BC_VOL , 
		b.Rel_DIA ,
		b.Rel_DIAO ,
		c.Rel_Top_MID

	from &T_Name. 		a 
	left join Rela	 	b on a.Relationship = b.Relationship
	left join Top		c on a.mid = c.mid;
quit;

proc datasets lib = work NoDetails NoList; 
	Delete rela top ; 
quit;

/* #15  UNI QC */

proc sort data = &T_Name. NoDupKey; by mid; run;

/* 
	#16  
		Small & Medium Business Identifier
	Each MID with a CID RTM BC VOL < $5M is SMB

		Top MID Identifier
	The MID with the biggest amount of bank card VOL
*/

data &T_Name.;
 set &T_Name.;
 if Rel_Top_MID ne 'Y' then Rel_Top_MID = 'N';
 if rel_bc_vol < 5000000 then SMB     = 1; 		else SMB     = 0;
 if SMB = 1 			 then SM_Biz = 'Yes' ; 	else SM_BIZ = 'No';
 if Rel_DIAO   < 50000   then CAM_ESQ = 1; 		else CAM_ESQ = 0;
 if Tax_Cnt = .  then Tax_Cnt = 0;
 if Bnk_Cnt = .  then Bnk_Cnt = 0;
run;

%end;

proc sql ;
	select memname into :TLC_SUMS Separated by ' '  
	from dictionary.tables 
 	where 	libname = 'WORK' 
	and 	memname like 'TLC_THIS_MONTH_%' ; 
quit ;

data &LIBNM..TLC_Table_A ;
 set &TLC_SUMS. ;
run ;

proc datasets lib=Work NoList NoDetails ;
	delete &TLC_SUMS. ;
quit ;

%Mend TLC_RRU;
%TLC_RRU


/********************************************************/
/********************************************************/
/*
  _____          _           _   ____                 
 |  __ \        (_)         | | |  _ \                
 | |__) |__ _ __ _  ___   __| | | |_) | __ _ ___  ___ 
 |  ___/ _ \ '__| |/ _ \ / _` | |  _ < / _` / __|/ _ \
 | |  |  __/ |  | | (_) | (_| | | |_) | (_| \__ \  __/
 |_|   \___|_|  |_|\___/ \__,_| |____/ \__,_|___/\___|
                                                      
                                                      
*/
/********************************************************/
/********************************************************/


%macro period_base;

%do i = 1 %to %eval(&P_CNT.-1) ;

	/* Compile list of customer from the prior month */
	
	data tlc_prior_&i.;   
	 set &LIBNM..TLC_Table_A (where =( p = "&&prd&i."D and DIAO ne 0)); 
 	run;

	%Let j = %eval(&i+1);

	/* Compile the list of customers from the current month */

	data &LIBNM..tlc_current_&j.; 
	 set &LIBNM..TLC_Table_A (where =( p = "&&prd&j."D and DIAO ne 0)); 
 	 Active_Current_Month = 1;
 	 if VOL = 0 and DIAO ne 0 then Inactive_Acct = 1; else Inactive_Acct = 0;
 	 if Inactive_Acct = 0 then Active_Acct = 1; else Active_Acct = 0;
 	 if inactive_acct = 1 then Inactive_DIAO = diao; else Inactive_DIAO = 0; 
 	 if Active_acct   = 1 then Active_DIAO   = diao; else Active_DIAO   = 0;
	run;

	proc sql;
		create table tlc_prior_&i. as select i.*, j.Active_Current_Month
		from tlc_prior_&i. i left join &LIBNM..tlc_current_&j. j on i.mid = j.mid ;
	quit;

	data attrn;
	 set tlc_prior_&i.;
	 if Active_Current_Month ne 1 ;
	 Attrn = 1;
	 P = "&&prd&j."D;
	 Attrn_DIAO 	= DIAO;
	 Attrn_VOL 		= VOL ;
	 Attrn_RTM_DIAO = RTM_DIAO;
	 Attrn_RTM_VOL 	= RTM_VOL;
	 Attrn_TRN		= TRN;
	 Attrn_RTM_TRN	= RTM_TRN;
	 if HOA = 1 or STP = 1 then Delete;
	run;

	data &LIBNM..tlc_current_&j. ; 
	 set &LIBNM..tlc_current_&j. attrn; 
	 if Attrn ne 1 then do;
	 	Attrn			= 0;
	 	Attrn_DIAO 		= 0;
	 	Attrn_VOL 		= 0;
	 	Attrn_RTM_DIAO  = 0;
	 	Attrn_RTM_VOL 	= 0;
	 	Attrn_TRN		= 0;
	 	Attrn_RTM_TRN	= 0;
	 end;
	run; 

	proc sql; 
		drop table tlc_prior_&i.; 
	quit;

%end;
proc datasets lib=work NoList NoDetails;
	delete attrn  ; 
quit;
%mend period_base;
%period_base

FileName test EMail 'Samuel.Seibert@Elavon.com' EMAILID ='Outlook' ;

DATA _null_ ;
	File test
	SUBJECT	= "TLC Period Base for &Period_Of_Interest. is Finished"
	TO		= 'Hokaten@gmail.com'
	CC		= 'Samuel.Seibert@Elavon.com'
	;
	Put "TLC Period Base for &Period_Of_Interest. is Finished";
	Put ' ';
RUN ;


/*
data &LIBNM..tlc_current_35 ;
 set &LIBNM..tlc_current_35 ;
 if attrn = 1 and rela = 'SUN COUNTRY AIRLINES' then delete;
run ;

data &LIBNM..tlc_current_36 ;
 set &LIBNM..tlc_current_36 ;
 if attrn = 1 and 
	rela in (
	'ARAMARK'					, 
	'STATE OF NY'				,
	'STATE OF CALIFORNIA'		,
	'CITY OF LOS ANGELES CA'	,
	'VON MAUR'					,
	'STATE OF MICHIGAN'			,
	'COMMONWEALTH OF VIRGINIA'	,
	'STATE OF OREGON'			,
	'CITY OF INDEPENDENCE'		,
	'STATE OF NEW JERSEY'		,
	'STATE OF CALIFORNIA'		,
	'REGIS CORPORATION'			,
	'VINCENT CAMUTO LLC'		,
	'UNITED DYNACARE LLC'
	)
	then delete; 
run ;

%macro TLC_ADJUST;
%do i = 26 %to &P_CNT. ;
data &LIBNM..tlc_current_&i. ;
 set &LIBNM..tlc_current_&i. ;
 if attrn = 1 and rela = 'ARAMARK' then delete; 
run ;
%end;
%mend TLC_ADJUST ;
%TLC_ADJUST

*/

/*
libname temp "C:\Users\srseibe\SAS Tables\temp";

proc copy in = work out = temp memtype = data ;
   select 
	TLC_TABLE_A

	TLC_CURRENT_2
	TLC_CURRENT_3
	TLC_CURRENT_4
	TLC_CURRENT_5
	TLC_CURRENT_6
	TLC_CURRENT_7
	TLC_CURRENT_8
	TLC_CURRENT_9
	TLC_CURRENT_10
	TLC_CURRENT_11
	TLC_CURRENT_12
	TLC_CURRENT_13
	TLC_CURRENT_14
	TLC_CURRENT_15
	TLC_CURRENT_16
	TLC_CURRENT_17
	TLC_CURRENT_18
	TLC_CURRENT_19
	TLC_CURRENT_20
	TLC_CURRENT_21
	TLC_CURRENT_22
	TLC_CURRENT_23
	TLC_CURRENT_24
	TLC_CURRENT_25
	TLC_CURRENT_26
	TLC_CURRENT_27
	TLC_CURRENT_28
	TLC_CURRENT_29
	TLC_CURRENT_30
	TLC_CURRENT_31
	TLC_CURRENT_32
	TLC_CURRENT_33
	TLC_CURRENT_34
	TLC_CURRENT_35
	TLC_CURRENT_36		
	;
run;

%macro TLC_ADJUST;
%do i = 2 %to &P_CNT. ;
data &LIBNM..tlc_current_&i. ;
 set &LIBNM..tlc_current_&i. ;
 if attrn = 1 and rela = 'ARAMARK' then delete; 
run ;
%end;
%mend TLC_ADJUST ;
*/

%macro TLC_ADJUST_2015_03;
%do i = 2 %to &P_CNT. ;
data &LIBNM..tlc_current_&i. ;
 set &LIBNM..tlc_current_&i. ;
  if attrn = 1 and 
	rela in (
	'ARAMARK'					, 
	'STATE OF NY'				,
	'STATE OF CALIFORNIA'		,
	'CITY OF LOS ANGELES CA'	,
	'VON MAUR'					,
	'STATE OF MICHIGAN'			,
	'COMMONWEALTH OF VIRGINIA'	,
	'STATE OF OREGON'			,
	'CITY OF INDEPENDENCE'		,
	'STATE OF NEW JERSEY'		,
	'STATE OF CALIFORNIA'		,
	'REGIS CORPORATION'			,
	'VINCENT CAMUTO LLC'		,
	'UNITED DYNACARE LLC'		,
	'SUN COUNTRY AIRLINES'		,
	'LEE ENTERPRISES'			
	)
	then delete; 
run ;
%end;
%mend TLC_ADJUST_2015_03 ;
%TLC_ADJUST_2015_03

/* -------------------- *//* ---------------- *//* -------------------- */
/* -------------------- *//* ---------------- *//* -------------------- */
/*
   ____                      _ _   _______ _      _____   _____       _       
  / __ \                    | | | |__   __| |    / ____| |  __ \     | |      
 | |  | |_   _____ _ __ __ _| | |    | |  | |   | |      | |__) |__ _| |_ ___ 
 | |  | \ \ / / _ \ '__/ _` | | |    | |  | |   | |      |  _  // _` | __/ _ \
 | |__| |\ V /  __/ | | (_| | | |    | |  | |___| |____  | | \ \ (_| | ||  __/
  \____/  \_/ \___|_|  \__,_|_|_|    |_|  |______\_____| |_|  \_\__,_|\__\___|
                                                                              
                                                                              
*/
/* -------------------- *//* ---------------- *//* -------------------- */
/* -------------------- *//* ---------------- *//* -------------------- */


%macro na_mth_attrn_output;
%do i = 2 %to &P_CNT. ;
Proc Summary data = &LIBNM..tlc_Current_&i. ;	 
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO ;
 Output Out=tlc_sum_&i. Sum =  ; Run ;
data tlc_sum_&i. ; Retain Period ;  Format Period date9. ;
 set tlc_sum_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol) ; 
 Period = "&&prd&i."D ;  Rename _FREQ_ = Total_Active_MIDs  diao=DIAO ; run ;
%end ;
proc sql ;
 select memname into :TLC_SUMS Separated by ' '  from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUM_%' ; quit ;
data tlc_sum ;  set &tlc_sums. ;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN ;
 DIAO = DIAO - Attrn_DIAO ; run ;
proc sort data = tlc_sum ; by Period ; run ;
Title "Overall Report for Month: &&prd&P_CNT." ;
 proc print data = tlc_sum ; run ; title;
proc datasets lib = work NoDetails NoList ;
 delete tlc_sum &tlc_sums. ; Quit ;
%mend na_mth_attrn_output ;
%na_mth_attrn_output


/* -------------------- *//* ---------------------------------- *//* -------------------- */
/* -------------------- *//* ---------------------------------- *//* -------------------- */
/*
  _____           _                                                      _ _             _ 
 |  __ \         | |                       /\                           | (_)           | |
 | |__) |_ _ _ __| |_ _ __   ___ _ __     /  \   _ __  _ __  _   _  __ _| |_ _______  __| |
 |  ___/ _` | '__| __| '_ \ / _ \ '__|   / /\ \ | '_ \| '_ \| | | |/ _` | | |_  / _ \/ _` |
 | |  | (_| | |  | |_| | | |  __/ |     / ____ \| | | | | | | |_| | (_| | | |/ /  __/ (_| |
 |_|   \__,_|_|   \__|_| |_|\___|_|    /_/    \_\_| |_|_| |_|\__,_|\__,_|_|_/___\___|\__,_|
                                                                                                       
 
          _   _        _ _   _               _____       _            
     /\  | | | |      (_) | (_)             |  __ \     | |           
    /  \ | |_| |_ _ __ _| |_ _  ___  _ __   | |__) |__ _| |_ ___  ___ 
   / /\ \| __| __| '__| | __| |/ _ \| '_ \  |  _  // _` | __/ _ \/ __|
  / ____ \ |_| |_| |  | | |_| | (_) | | | | | | \ \ (_| | ||  __/\__ \
 /_/    \_\__|\__|_|  |_|\__|_|\___/|_| |_| |_|  \_\__,_|\__\___||___/
                                                                      
                                                                                                                                                                                                                                      
*/
/* -------------------- *//* ---------------------------------- *//* -------------------- */
/* -------------------- *//* --------------------------------- *//* --------------------- */


%macro PAAR_output;
%do i = 2 %to &P_CNT. ;
Proc Summary data = &LIBNM..tlc_Current_&i. ;	
 class Partner_Group ;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO ;
 Output Out=tlc_sum_&i. Sum =  ; Run ;
data tlc_sum_&i. ; Retain Period ;  Format Period date9. ;
 set tlc_sum_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol) ; 
 Period = "&&prd&i."D ;  Rename _FREQ_ = Total_Active_MIDs  diao=DIAO ; run ;
%end ;
proc sql ;
 select memname into :TLC_SUMS Separated by ' '  from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUM_%' ; quit ;
data tlc_sum ;  set &tlc_sums. ;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN ;
 DIAO = DIAO - Attrn_DIAO ; run ;
proc sort data = tlc_sum ; by Period ; run ;
Title "Partner Report for Month: &&prd&P_CNT." ;
 proc print data = tlc_sum ; run ; title;
proc datasets lib = work NoDetails NoList ;
 delete tlc_sum &tlc_sums. ; Quit ;
%mend na_mth_attrn_output ;
%PAAR_output

/*
  ____   _____ _____ 
 |  _ \ / ____/ ____|
 | |_) | (___| (___  
 |  _ < \___ \\___ \ 
 | |_) |____) |___) |
 |____/|_____/_____/ 
                     
                     
  ____            _                        _____       _       _   _                _____       _           
 |  _ \          (_)                      / ____|     | |     | | (_)              / ____|     | |          
 | |_) |_   _ ___ _ _ __   ___  ___ ___  | (___   ___ | |_   _| |_ _  ___  _ __   | (___   __ _| | ___  ___ 
 |  _ <| | | / __| | '_ \ / _ \/ __/ __|  \___ \ / _ \| | | | | __| |/ _ \| '_ \   \___ \ / _` | |/ _ \/ __|
 | |_) | |_| \__ \ | | | |  __/\__ \__ \  ____) | (_) | | |_| | |_| | (_) | | | |  ____) | (_| | |  __/\__ \
 |____/ \__,_|___/_|_| |_|\___||___/___/ |_____/ \___/|_|\__,_|\__|_|\___/|_| |_| |_____/ \__,_|_|\___||___/
                                                                                                            
                                                                                                            
*/

%macro BSS_output;
%do i = 2 %to &P_CNT. ;
Proc Summary data = &LIBNM..tlc_Current_&i. ;	
 where  REP_Channel = 'ATL TELESALES' ;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO ;
 Output Out=tlc_sum_&i. Sum =  ; Run ;
data tlc_sum_&i. ; Retain Period ;  Format Period date9. ;
 set tlc_sum_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol) ; 
 Period = "&&prd&i."D ;  Rename _FREQ_ = Total_Active_MIDs  diao=DIAO ; run ;
%end ;
proc sql ;
 select memname into :TLC_SUMS Separated by ' '  from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUM_%' ; quit ;
data tlc_sum ;  set &tlc_sums. ;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN ;
 DIAO = DIAO - Attrn_DIAO ; run ;
proc sort data = tlc_sum ; by Period ; run ;
Title "BSS Report for Month: &&prd&P_CNT." ;
 proc print data = tlc_sum ; run ; title;
proc datasets lib = work NoDetails NoList ;
 delete tlc_sum &tlc_sums. ; Quit ;
%mend BSS_output ;
/*%BSS_output*/


/****************//**********************//****************/
/****************//**********************//****************/
/*
  _   _             _____ __  __ ____  
 | \ | |   /\      / ____|  \/  |  _ \ 
 |  \| |  /  \    | (___ | \  / | |_) |
 | . ` | / /\ \    \___ \| |\/| |  _ < 
 | |\  |/ ____ \   ____) | |  | | |_) |
 |_| \_/_/    \_\ |_____/|_|  |_|____/ 
                                       
                                       
  _______ _      _____   __  __                                                    _   
 |__   __| |    / ____| |  \/  |                                                  | |  
    | |  | |   | |      | \  / | ___  __ _ ___ _   _ _ __ ___ _ __ ___   ___ _ __ | |_ 
    | |  | |   | |      | |\/| |/ _ \/ _` / __| | | | '__/ _ \ '_ ` _ \ / _ \ '_ \| __|
    | |  | |___| |____  | |  | |  __/ (_| \__ \ |_| | | |  __/ | | | | |  __/ | | | |_ 
    |_|  |______\_____| |_|  |_|\___|\__,_|___/\__,_|_|  \___|_| |_| |_|\___|_| |_|\__|
                                                                                       
                                                                                        
*/
/****************//**********************//****************/
/****************//**********************//****************/


%macro na_smb_mth_attrn_output;
%do i = 2 %to &P_CNT. ;
Proc Summary data = &LIBNM..tlc_Current_&i. ;	
 where SMB = 1 ; 
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO;  
 Output Out=tlc_sum_&i. Sum =  ; Run ;
data tlc_sum_&i.; Retain Period; Format Period date9.;
 set tlc_sum_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol); Period = "&&prd&i."D; 
 Rename _FREQ_ = Total_Active_MIDs  diao=DIAO; run;
%end;
proc sql;
 select memname into :TLC_SUMS Separated by ' ' from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUM_%' ;
quit;
data tlc_sum; set &tlc_sums.;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN;
 DIAO = DIAO - Attrn_DIAO; run;
proc sort data = tlc_sum; by Period; run;
Title "Overall Report for NA SMB Month: &&prd&P_CNT.";
	proc print data = tlc_sum; run; title;
proc datasets lib=work NoDetails NoList; delete tlc_sum &tlc_sums.; Quit;
%mend NA_smb_mth_attrn_output;
%NA_smb_mth_attrn_output


/* CAM 2015 
   _____          __  __     ___   ___  __ _____ 
  / ____|   /\   |  \/  |   |__ \ / _ \/_ | ____|
 | |       /  \  | \  / |      ) | | | || | |__  
 | |      / /\ \ | |\/| |     / /| | | || |___ \ 
 | |____ / ____ \| |  | |    / /_| |_| || |___) |
  \_____/_/    \_\_|  |_|   |____|\___/ |_|____/ 
                                                 
                                                 
  _______ _      _____    __  __                                                    _   
 |__   __| |    / ____|  |  \/  |                                                  | |  
    | |  | |   | |       | \  / | ___  __ _ ___ _   _ _ __ ___ _ __ ___   ___ _ __ | |_ 
    | |  | |   | |       | |\/| |/ _ \/ _` / __| | | | '__/ _ \ '_ ` _ \ / _ \ '_ \| __|
    | |  | |___| |____   | |  | |  __/ (_| \__ \ |_| | | |  __/ | | | | |  __/ | | | |_ 
    |_|  |______\_____|  |_|  |_|\___|\__,_|___/\__,_|_|  \___|_| |_| |_|\___|_| |_|\__|
                                                                                        
                                                                                        
*/


%macro CAM_2015_BoB_mth_attrn_output;
%do i = 2 %to &P_CNT. ;
Proc Summary data = &LIBNM..tlc_Current_&i. ;	 
 where CAM_2015 = 1;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO ;
 Output Out=tlc_sum_&i. Sum =  ; Run ;
data tlc_sum_&i. ; Retain Period ;  Format Period date9. ;
 set tlc_sum_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol) ; 
 Period = "&&prd&i."D ;  Rename _FREQ_ = Total_Active_MIDs  diao=DIAO ; run ;
%end ;
proc sql ;
 select memname into :TLC_SUMS Separated by ' '  from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUM_%' ; quit ;
data tlc_sum ;  set &tlc_sums. ;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN ;
 DIAO = DIAO - Attrn_DIAO ; run ;
proc sort data = tlc_sum ; by Period ; run ;
Title "CAM 2015 BoB Report for Month: &&prd&P_CNT." ;
 proc print data = tlc_sum ; run ; title;
proc datasets lib = work NoDetails NoList ;
 delete tlc_sum &tlc_sums. ; Quit ;
%mend CAM_2015_BoB_mth_attrn_output ;
%CAM_2015_BoB_mth_attrn_output





/* -------------------- *//* ----------------------------------- *//* -------------------- */
/* -------------------- *//* ----------------------------------- *//* -------------------- */
/*
  _______                           _____ _        _                _____             __  __       _   _     
 |__   __|                         / ____| |      | |              / ____|           |  \/  |     | | | |    
    | | ___ _ __  _   _ _ __ ___  | (___ | |_ __ _| |_ _   _ ___  | |    _   _ _ __  | \  / |_ __ | |_| |__  
    | |/ _ \ '_ \| | | | '__/ _ \  \___ \| __/ _` | __| | | / __| | |   | | | | '__| | |\/| | '_ \| __| '_ \ 
    | |  __/ | | | |_| | | |  __/  ____) | || (_| | |_| |_| \__ \ | |___| |_| | |_   | |  | | | | | |_| | | |
    |_|\___|_| |_|\__,_|_|  \___| |_____/ \__\__,_|\__|\__,_|___/  \_____\__,_|_(_)  |_|  |_|_| |_|\__|_| |_|
                                                                                                             
                                                                                                             
*/
/* -------------------- *//* ----------------------------------- *//* -------------------- */
/* -------------------- *//* ----------------------------------- *//* -------------------- */

/* Attrition by Account Tenure for the Current Month */

data attrn_tiy_graph ;
 set &LIBNM..tlc_Current_&P_CNT. ;
       if ATTRN ne 1 then TID = floor ((intck('day',datepart(OPD), &runday.) - (day(&runday.) < day(datepart(OPD))))) ;  
  else if ATTRN = 1  then TID = floor ((intck('day',datepart(OPD),P) - (day(P) < day(datepart(OPD))))) ;  
  TIY = TID / 365 ;
  		if TIY < 1  then TIY_GRP = '1 Under 1  Year ';
 else	if TIY < 2  then TIY_GRP = '2  1 - 2   Years';
 else	if TIY < 4  then TIY_GRP = '3  3 - 4   Years';
 else	if TIY < 6  then TIY_GRP = '4  5 - 6   Years';
 else	if TIY < 8  then TIY_GRP = '5  7 - 8   Years';
 else	if TIY < 10 then TIY_GRP = '6  9 - 10  Years';
 else					 TIY_GRP = '7 10 - 20+ Years';
run ;

title "Attrition by Account Tenure for the Current Month";
Proc Means data = attrn_tiy_graph SUM; where attrn =1;   class tiy_grp ;  var Attrn_RTM_DIAO ; 	run ;
Proc Means data = attrn_tiy_graph SUM; where attrn ne 1; class tiy_grp ;  var DIAO ; 			run ;
title;

/* Median Tenure */
title "Median Account Tenure for the Current Month Active Base";
Proc Means data = attrn_tiy_graph min p25 Median p75 p90 p99 max mean; where attrn ne 1; var TIY ; 	run ;
title "Median Account Tenure for the Current Month Attrition";
Proc Means data = attrn_tiy_graph min p25 Median p75 p90 p99 max mean; where attrn =1;   var TIY ; 	run ;
title;


proc sort data = attrn_tiy_graph (where=( TIY_GRP = '7 10 - 20+ Years')) out = big_fish;
by descending Attrn_RTM_DIAO;
run;

Proc sql; 
	select sum(Attrn_RTM_DIAO) into :curr_total from big_fish ; 
quit;

data big_fish;
 set big_fish;
 PCT_of_DIAO = Attrn_RTM_DIAO / &curr_total.;
run;

Proc Datasets Lib=work NoList NoDetails; 
	Delete attrn_tiy_graph big_fish; 
Quit;


/* -------------------- *//* ----------------------------- *//* -------------------- */
/* -------------------- *//* ----------------------------- *//* -------------------- */
/*
                                    _     _______                        
     /\                            | |   |__   __|                       
    /  \   ___ ___ ___  _   _ _ __ | |_     | | ___ _ __  _   _ _ __ ___ 
   / /\ \ / __/ __/ _ \| | | | '_ \| __|    | |/ _ \ '_ \| | | | '__/ _ \
  / ____ \ (_| (_| (_) | |_| | | | | |_     | |  __/ | | | |_| | | |  __/
 /_/    \_\___\___\___/ \__,_|_| |_|\__|    |_|\___|_| |_|\__,_|_|  \___|
                                                                         
   _____          _     ___  _  _          __  __             _   _         
 |  __ \        | |   |__ \| || |        |  \/  |           | | | |        
 | |__) |_ _ ___| |_     ) | || |_ ______| \  / | ___  _ __ | |_| |__  ___ 
 |  ___/ _` / __| __|   / /|__   _|______| |\/| |/ _ \| '_ \| __| '_ \/ __|
 | |  | (_| \__ \ |_   / /_   | |        | |  | | (_) | | | | |_| | | \__ \
 |_|   \__,_|___/\__| |____|  |_|        |_|  |_|\___/|_| |_|\__|_| |_|___/
                                                                                                                                                                                                                           
*/
/* -------------------- *//* ----------------------------- *//* -------------------- */
/* -------------------- *//* ----------------------------- *//* -------------------- */


%macro ATP24M ;
%do i=2 %to  &P_CNT.;

Proc Summary data = &LIBNM..tlc_Current_&i. ; 
	where ATTRN = 1 ; 
	var tiy ; 
	Output Out=tlc_attrn_&i. Mean = ; 
Run ;

data tlc_attrn_&i. ; 
 Retain Period ; 
 Format Period date9. ;
 set tlc_attrn_&i. ( drop = _type_ ) ; 
 Period = "&&prd&i."D ; 
 Rename 
  _FREQ_ = Total_Atrrn_MIDs  
  tiy = Tenure_in_Years 
 ;
run ;

Proc Summary data = &LIBNM..tlc_Current_&i. ; 
	where ATTRN ne 1 ; 
	var tiy ; 
	Output Out=tlc_base_&i. Mean = ; 
Run ;

data tlc_base_&i.; 
 Retain Period; 
 Format Period date9.;
 set tlc_base_&i. ( drop = _type_ ) ; 
Period = "&&prd&i."D ; 
 Rename 
	_FREQ_ = Total_Base_MIDs  
	tiy = Tenure_in_Years 
 ;
run ;

proc sql ;
	create table TLC_BOTH_&i. as select 
		a.period , 
		a.Total_Base_MIDs , 
		b.Total_Atrrn_MIDs ,
 		a.Tenure_in_Years as TiY_Base ,
 		b.Tenure_in_Years as TiY_Attrn
 	from 		tlc_base_&i.  a 
	left join 	tlc_attrn_&i. b on a.period = b.period ;
quit;

proc datasets lib = work NoDetails NoList ; 
	delete tlc_base_&i. tlc_attrn_&i.; 
quit ;

%end ;

proc sql;
 	select memname into :TLC_BOTH Separated by ' ' 
	from dictionary.tables  
	where 	libname = 'WORK' 
	and 	memname like 'TLC_BOTH_%' ;
quit ;

data tlc_both ; 
 set &tlc_BOTH. ;  
run  ;

proc sort data = tlc_both ; 
	by Period ; 
run ;

Title "Overall Report for Month: &&prd&P_CNT." ;
	proc print data = tlc_both ; 
	run ;
title ;

proc datasets lib = work NoDetails NoList ; 
	delete tlc_base_&i. tlc_attrn_&i. &tlc_both. tlc_both; 
quit ;

%mend ATP24M ;
%ATP24M


/* -------------------- *//* -------------------------------------- *//* -------------------- */
/* -------------------- *//* -------------------------------------- *//* -------------------- */
/*
  __  __ _____  _____            __  __ _____  _____ _____    __             _   _          
 |  \/  |_   _|/ ____|   ___    |  \/  |_   _|/ ____/ ____|  / _|           | | | |         
 | \  / | | | | (___    ( _ )   | \  / | | | | (___| (___   | |_ ___  _ __  | |_| |__   ___ 
 | |\/| | | |  \___ \   / _ \/\ | |\/| | | |  \___ \\___ \  |  _/ _ \| '__| | __| '_ \ / _ \
 | |  | |_| |_ ____) | | (_>  < | |  | |_| |_ ____) |___) | | || (_) | |    | |_| | | |  __/
 |_|  |_|_____|_____/   \___/\/ |_|  |_|_____|_____/_____/  |_| \___/|_|     \__|_| |_|\___|
                                                                                            
                                                                                            
   _____                          _     __  __             _   _               _   _              
  / ____|                        | |   |  \/  |           | | | |         /\  | | | |             
 | |    _   _ _ __ _ __ ___ _ __ | |_  | \  / | ___  _ __ | |_| |__      /  \ | |_| |_ _ __ _ __  
 | |   | | | | '__| '__/ _ \ '_ \| __| | |\/| |/ _ \| '_ \| __| '_ \    / /\ \| __| __| '__| '_ \ 
 | |___| |_| | |  | | |  __/ | | | |_  | |  | | (_) | | | | |_| | | |  / ____ \ |_| |_| |  | | | |
  \_____\__,_|_|  |_|  \___|_| |_|\__| |_|  |_|\___/|_| |_|\__|_| |_| /_/    \_\__|\__|_|  |_| |_|
                                                                                                  
                                                                                                  
*/
/* -------------------- *//* -------------------------------------- *//* -------------------- */
/* -------------------- *//* -------------------------------------- *//* -------------------- */

title "Current Month Base PRD DIAO MIS";
Proc Means data = &LIBNM..tlc_Current_&P_CNT. N Sum; where attrn ne 1; class MIS ; var DIAO; 			Run;
title "Current Month Attrn PRD DIAO MIS"; 
Proc Means data = &LIBNM..tlc_Current_&P_CNT. N Sum; where attrn = 1;  class MIS;  var Attrn_RTM_DIAO; 	Run;

%macro TLC_by_MIS;
%do i = 2 %to &P_CNT. ;
Proc Summary data = &LIBNM..tlc_Current_&i. ;	
 Class MIS; 
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO ;
 Output Out=tlc_sum_&i. Sum =  ; Run ;
data tlc_sum_&i. ; Retain Period ;  Format Period date9. ;
 set tlc_sum_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol) ; 
 Period = "&&prd&i."D ;  Rename _FREQ_ = Total_Active_MIDs  diao=DIAO ; run ;
%end ;
proc sql ;
 select memname into :TLC_SUMS Separated by ' '  from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUM_%' ; quit ;
data tlc_sum ;  set &tlc_sums. ;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN ;
 DIAO = DIAO - Attrn_DIAO ; run ;
proc sort data = tlc_sum ; by Period ; run ;
Title "MIS Time Report for Month: &&prd&P_CNT." ;
 proc print data = tlc_sum ; run ; title;
proc datasets lib = work NoDetails NoList ;
 delete tlc_sum &tlc_sums. ; Quit ;
%mend TLC_by_MIS ;
%TLC_by_MIS

/* -------------------- *//* ------------------------ *//* -------------------- */
/* -------------------- *//* ------------------------ *//* -------------------- */
/*
   ____        _      _       _____ _                                       _           _      __     ____     __
  / __ \      (_)    | |     / ____| |                    /\               | |         (_)     \ \   / /\ \   / /
 | |  | |_   _ _  ___| | __ | |    | | ___  ___  ___     /  \   _ __   __ _| |_   _ ___ _ ___   \ \_/ /__\ \_/ / 
 | |  | | | | | |/ __| |/ / | |    | |/ _ \/ __|/ _ \   / /\ \ | '_ \ / _` | | | | / __| / __|   \   / _ \\   /  
 | |__| | |_| | | (__|   <  | |____| | (_) \__ \  __/  / ____ \| | | | (_| | | |_| \__ \ \__ \    | | (_) || |   
  \___\_\\__,_|_|\___|_|\_\  \_____|_|\___/|___/\___| /_/    \_\_| |_|\__,_|_|\__, |___/_|___/    |_|\___/ |_|   
                                                                               __/ |                             
                                                                              |___/                              
*/
/* -------------------- *//* ------------------------ *//* -------------------- */
/* -------------------- *//* ------------------------ *//* -------------------- */


/* 
	Quick Close MIDs are:
	MIDs who have opened within the calander year, and have closed their account.
    Show counts for closures by the quick close interval
*/

Proc SQL;
	Select 	compress(Libname||"."||Memname) into :TLC_TABLES SEPARATED by ' '
	From 	Dictionary.Tables 
	Where 	upcase(libname) = upcase("&LIBNM.")
	and		upcase(Memname) like 'TLC_CURRENT_%' ;
Quit;

data  Quick_Close_CY_YTD;
 set  
temp.tlc_current_2 
temp.tlc_current_3 
temp.tlc_current_26
temp.tlc_current_27
temp.tlc_current_28
temp.tlc_current_29
temp.tlc_current_30
temp.tlc_current_31
temp.tlc_current_32
temp.tlc_current_33
temp.tlc_current_34
temp.tlc_current_35 ;
 where  year(datepart(OPD)) = 2014;
run;

proc sort data = quick_close_CY_ytd ; by MID descending P ; run ;

Proc Sort data = quick_Close_CY_ytd NoDupKey ; by MID ; Run ;

data  QC_A_CY ;
set Quick_Close_CY_YTD ;
 OPD  = datepart(OPD) 	 ;
 CLD = datepart(CLD) 	 ;
 LDD  = datepart(LDD)    ;
 FDD = datepart(FDD)  	 ;
 format OPD CLD LDD FDD date9.;

 if status in ('C','D') and CLD ne . then closed = 1; else closed = 0;

 if Closed = 0 then TID = floor ((intck('day',OPD, &RunDay.) - (day(&RunDay.) < day(OPD)))) ;  
  else if Closed = 1 and LDD = . 	then TID = floor ((intck('day',OPD, CLD ) - (day(CLD) < day(OPD)))) ;  
  else if Closed = 1 and LDD ne .	then TID = floor ((intck('day',OPD, LDD ) - (day(LDD) < day(OPD)))) ;  

    if Closed and TID le 365 then Quick_Close = 1; else Quick_Close = 0;

	  if Quick_Close = 1 then do;
  		if TID  <= 30  then QCI  = '  0-30  Days';
  else	if TID  <= 60  then QCI  = ' 31-60  Days';
  else	if TID  <= 90  then QCI  = ' 61-90  Days';
  else	if TID  <= 120 then QCI  = ' 91-120 Days';
  else	if TID  <= 150 then QCI  = '121-150 Days';
  else	if TID  <= 180 then QCI  = '151-180 Days';
  else	if TID  <= 210 then QCI  = '181-210 Days';
  else	if TID  <= 240 then QCI  = '211-240 Days';
  else	if TID  <= 270 then QCI  = '241-270 Days';
  else	if TID  <= 300 then QCI  = '271-300 Days';
  else	if TID  <= 330 then QCI  = '301-330 Days';
  else	if TID  <= 365 then QCI  = '331-365 Days';
  end;
  Open_Month = Month(OPD);

 run;

/*
proc sql;
	create table 	srs.ID_List as select distinct MID from QC_A_CY;
quit;
*/

proc sql;
	create table 	ID_List as select distinct MID from QC_A_CY;
	drop   table 	bsnsdevl.ID_List ;
	create table 	bsnsdevl.ID_List like ID_List ;
	insert into  	bsnsdevl.ID_List select * from ID_List ;
	drop table		ID_List ;
quit;

proc sql;
	connect to oracle (user = &U. password = &P. path= 'NEWDW01.WORLD');
	Create table PAID as select * from connection to oracle ( 
	select	Distinct a.mid , a.period , nvl(a.STM_INCOME,0) as TOT_CST		
	from  	browser.merch_tran_info a inner join bsnsdevl.ID_List b on a.mid = b.mid );
	disconnect from oracle;
quit;

/*
Proc SQL;
	Create Table paid_tlc_sum as select 
	mid, sum(TOT_CST) as Total_Cost
	from srs.paid group by mid;
Quit;
*/


Proc SQL;
	Create Table paid_tlc_sum as select 
	mid, sum(TOT_CST) as Total_Cost
	from paid group by mid;
Quit;

Proc Sql;
	create table qc_b_CY as select a.*, b.total_cost 
	from qc_a_CY a left join paid_tlc_sum b on a.mid = b.mid ; 
quit;

data qc_b_CY ;
 set qc_b_CY ;
 if ldd = . 						then Never_Active 	= 1 ; else Never_Active = 0 ;
 if Total_Cost > 0 					then Billed 		= 1 ; else Billed 		= 0 ;
 if Billed = 0 and Never_Active = 1 then Noise 			= 1 ; else Noise 		= 0 ;
 if Never_Active = 0  				then Billed = 1 ;
run;

/* Past year PY Quick Close - 2013 */

/*
data Quick_Close_2012_YTD;
 set tlc_Current_2  tlc_Current_3  tlc_Current_4
     tlc_Current_5  tlc_Current_6  tlc_Current_7
	 tlc_Current_8  tlc_Current_9  tlc_Current_10 
     tlc_Current_11 tlc_Current_12 tlc_Current_13 ;
	 where  year(datepart(OPD)) = 2012;
run;
*/

data Quick_Close_PY_YTD;
 set 
temp.tlc_current_2 
temp.tlc_current_3 
temp.tlc_current_26
temp.tlc_current_27
temp.tlc_current_28
temp.tlc_current_29
temp.tlc_current_30
temp.tlc_current_31
temp.tlc_current_32
temp.tlc_current_33
temp.tlc_current_34
temp.tlc_current_35
;
	 where  year(datepart(OPD)) = 2013;
run;

proc sort data = quick_close_PY_ytd ; by MID descending P; run;

Proc Sort data = quick_Close_PY_ytd NoDupKey; by MID ; Run;

data  QC_A_PY;
set Quick_Close_PY_YTD;
 OPD  = datepart(OPD) ;
 CLD = datepart(CLD) ;
 LDD  = datepart(LDD) ;
 FDD = datepart(FDD) ;
 format OPD CLD LDD FDD date9.;

 if status in ('C','D') and CLD ne . then closed = 1; else closed = 0;

 if Closed = 0 then TID = floor ((intck('day',OPD, &RunDay.) - (day(&RunDay.) < day(OPD)))) ;  
  else if Closed = 1 and LDD = . 	then TID = floor ((intck('day',OPD, CLD ) - (day(CLD) < day(OPD)))) ;  
  else if Closed = 1 and LDD ne .	then TID = floor ((intck('day',OPD, LDD ) - (day(LDD) < day(OPD)))) ;  

    if Closed and TID le 365 then Quick_Close = 1; else Quick_Close = 0;

	  if Quick_Close = 1 then do;
  		if TID  <= 30  then QCI  = '  0-30  Days';
  else	if TID  <= 60  then QCI  = ' 31-60  Days';
  else	if TID  <= 90  then QCI  = ' 61-90  Days';
  else	if TID  <= 120 then QCI  = ' 91-120 Days';
  else	if TID  <= 150 then QCI  = '121-150 Days';
  else	if TID  <= 180 then QCI  = '151-180 Days';
  else	if TID  <= 210 then QCI  = '181-210 Days';
  else	if TID  <= 240 then QCI  = '211-240 Days';
  else	if TID  <= 270 then QCI  = '241-270 Days';
  else	if TID  <= 300 then QCI  = '271-300 Days';
  else	if TID  <= 330 then QCI  = '301-330 Days';
  else	if TID  <= 365 then QCI  = '331-365 Days';
  end;
  Open_Month = Month(OPD);

 run;

 /* 
 	2012 

 data Quick_Close_PY_YTD;
 set tlc_Current_2  tlc_Current_3  tlc_Current_4
     tlc_Current_5  tlc_Current_6  tlc_Current_7
	 tlc_Current_8  tlc_Current_9  tlc_Current_10 
     tlc_Current_11 tlc_Current_12 tlc_Current_13 ;
	 where  year(datepart(OPD)) = 2012;
run;

proc sort data = quick_close_PY_ytd ; by MID descending P; run;

Proc Sort data = quick_Close_PY_ytd NoDupKey; by MID ; Run;

data  QC_A_PY;
set Quick_Close_PY_YTD;
 OPD  = datepart(OPD) ;
 CLD = datepart(CLD) ;
 LDD  = datepart(LDD) ;
 FDD = datepart(FDD) ;
 format OPD CLD LDD FDD date9.;

 if status in ('C','D') and CLD ne . then closed = 1; else closed = 0;

 if Closed = 0 then TID = floor ((intck('day',OPD, &RunDay.) - (day(&RunDay.) < day(OPD)))) ;  
  else if Closed = 1 and LDD = . 	then TID = floor ((intck('day',OPD, CLD ) - (day(CLD) < day(OPD)))) ;  
  else if Closed = 1 and LDD ne .	then TID = floor ((intck('day',OPD, LDD ) - (day(LDD) < day(OPD)))) ;  

    if Closed and TID le 365 then Quick_Close = 1; else Quick_Close = 0;

	  if Quick_Close = 1 then do;
  		if TID  <= 30  then QCI  = '  0-30  Days';
  else	if TID  <= 60  then QCI  = ' 31-60  Days';
  else	if TID  <= 90  then QCI  = ' 61-90  Days';
  else	if TID  <= 120 then QCI  = ' 91-120 Days';
  else	if TID  <= 150 then QCI  = '121-150 Days';
  else	if TID  <= 180 then QCI  = '151-180 Days';
  else	if TID  <= 210 then QCI  = '181-210 Days';
  else	if TID  <= 240 then QCI  = '211-240 Days';
  else	if TID  <= 270 then QCI  = '241-270 Days';
  else	if TID  <= 300 then QCI  = '271-300 Days';
  else	if TID  <= 330 then QCI  = '301-330 Days';
  else	if TID  <= 365 then QCI  = '331-365 Days';
  end;
  Open_Month = Month(OPD);

 run;

 Title1 "Open Months Current Year 2012 - Quick Close Interval";
proc freq data =  QC_A_PY ;
	where Quick_Close = 1 ;
	tables QCI*Open_Month / nocum nopercent norow nocol missing;
run ; Title ;

  Title1 "Open Months Current Year 2012 - Quick Close Interval";
proc freq data =  QC_A_PY ;
	tables Quick_Close*Open_Month / nocum nopercent norow nocol missing;
run ; Title ;


 */

/* -------------------- *//* ---------------- *//* -------------------- */
/* -------------------- *//* Quick Close 13/14 *//* -------------------- */
/* -------------------- *//* ---------------- *//* -------------------- */

Title1 "Open Months Past Year 2013 - Quick Close";
proc freq data =  QC_A_PY ;
	tables Quick_Close*Open_Month / nocum nopercent norow nocol missing;
run ; title ;
Title1 "Open Months Past Year 2013 - Quick Close Interval";
proc freq data =  QC_A_PY ;
	where Quick_Close = 1 ;
	tables QCI*Open_Month / nocum nopercent norow nocol missing;
run ; Title ;

Title1 "Open Months Current Year 2014 - Quick Close";
proc freq data =  QC_A_CY ;
	tables Quick_Close*Open_Month / nocum nopercent norow nocol missing;
run ; title;
Title1 "Open Months Current Year 2014 - Quick Close Interval";
proc freq data =  QC_A_CY ;
	where Quick_Close = 1 ;
	tables QCI*Open_Month / nocum nopercent norow nocol missing;
run ; Title ;

Title1 "Open Months Current Year 2014 - Quick Close Bill/Acts";
Proc Freq data = qc_b_CY ;
	where Quick_Close = 1  ;
	tables Never_Active*Billed / missing list ;
run ; title;

/* Clean-Up */

Proc Datasets Lib=Work NoDetails NoList;
	Delete 	qc_a_PY 
			qc_a_CY
			qc_b_CY
	       	Quick_Close_PY_YTD 
			Quick_Close_CY_YTD
		   	paid 
			paid_tlc_sum ;
Quit;


/*************//***********************************************//*************/
/*************//***********************************************//*************/
/*
  _______ _      _____           _   _        _ _   _               _____       _            
 |__   __| |    / ____|     /\  | | | |      (_) | (_)             |  __ \     | |           
    | |  | |   | |         /  \ | |_| |_ _ __ _| |_ _  ___  _ __   | |__) |__ _| |_ ___  ___ 
    | |  | |   | |        / /\ \| __| __| '__| | __| |/ _ \| '_ \  |  _  // _` | __/ _ \/ __|
    | |  | |___| |____   / ____ \ |_| |_| |  | | |_| | (_) | | | | | | \ \ (_| | ||  __/\__ \
    |_|  |______\_____| /_/    \_\__|\__|_|  |_|\__|_|\___/|_| |_| |_|  \_\__,_|\__\___||___/
                                                                                             
                                                                                             
   __              _____ __  __ ____    _              _____       _            _____ _                            _     
  / _|            / ____|  \/  |  _ \  | |            / ____|     | |          / ____| |                          | |    
 | |_ ___  _ __  | (___ | \  / | |_) | | |__  _   _  | (___  _   _| |__ ______| |    | |__   __ _ _ __  _ __   ___| |___ 
 |  _/ _ \| '__|  \___ \| |\/| |  _ <  | '_ \| | | |  \___ \| | | | '_ \______| |    | '_ \ / _` | '_ \| '_ \ / _ \ / __|
 | || (_) | |     ____) | |  | | |_) | | |_) | |_| |  ____) | |_| | |_) |     | |____| | | | (_| | | | | | | |  __/ \__ \
 |_| \___/|_|    |_____/|_|  |_|____/  |_.__/ \__, | |_____/ \__,_|_.__/       \_____|_| |_|\__,_|_| |_|_| |_|\___|_|___/
                                               __/ |                                                                     
                                              |___/                                                                      
*/
/*************//***********************************************//*************/
/*************//***********************************************//*************/


%macro CAM_GRPS;
%do i = 2 %to &P_CNT.  ;
data  tlc_Current_&i.  ;
 set  tlc_Current_&i.  ;

 /* BizCase GRP */

 if CAM_BoB = 1 or CAM_KMS_BoB = 1 then CAM_ALL_FLG = 1; else CAM_ALL_FLG = 0;

 if 	Rela_Type 	not in ('AIRLN', 'HOSP', 'RM', 'HCARE') 
 and	channel 	ne 		'MSP'	
 and	Agent_Bank 	ne 		1	
 and	SMB			=		1
 then 	POT_CAM_FLG = 1; else POT_CAM_FLG = 0;

 if CAM_ALL_FLG = 0 and POT_CAM_FLG = 1 
 then NEW_CAM_FLG = 1; else NEW_CAM_FLG = 0;

 /* SMB / Potential CAM GROUPS */

  format CAM_GRPS $50. ; 

  if CAM_ALL_FLG = 1 or NEW_CAM_FLG = 1 then do;

 			if Channel = 'ALLI' and sub_channel = 'BOW' 		then CAM_GRPS = 'Bank of the West' ;
	else 	if Channel = 'ALLI' and sub_channel = 'UNION_BANK' 	then CAM_GRPS = 'Union Bank' ;
	else 	if Channel = 'ALLI' and sub_channel = 'REGIONS' 	then CAM_GRPS = 'Regions Bank' ;
 	else 	if Channel = 'ALLI' and sub_channel = 'USB' 		then CAM_GRPS = 'US Bank' ;
 	else 	if Channel = 'ALLI' and sub_channel = 'CITYNATL' 	then CAM_GRPS = 'City National Bank' ;
 	else 	if Channel = 'ALLI' and sub_channel = 'WACHOVIA' 	then CAM_GRPS = 'Wachovia' ;
 	else 	if Channel = 'ALLI' and sub_channel = 'KMS' 		then CAM_GRPS = 'Key Merchant Services' ;
 	else 	if Channel = 'NOVA' 								then CAM_GRPS = 'NOVA House Customers' ;
 	else 	if Channel = 'CBS' 									then CAM_GRPS = 'Community Banks' ;
 	else 	if Channel = 'ASSN' and sub_channel = 'COSTCO' 		then CAM_GRPS = 'USA Costco' ;
 	else 												             CAM_GRPS = 'Other CAM' ;
 end;
 else do;  
	CAM_GRPS = 'N/A';
 end;

run ;
%end;
%mend CAM_GRPS;
*%CAM_GRPS;

%macro usa_smb_rdc_mth_attrn_output;
%do i = 2 %to &P_CNT. ;
Proc Summary data = tlc_Current_&i. ;	
 class CAM_GRPS;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO;  
 Output Out=tlc_sum_&i. Sum =  ;
Run ;
data tlc_sum_&i. ; Retain Period; Format Period date9. ;
 set tlc_sum_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol) ; Period = "&&prd&i."D ; 
 Rename _FREQ_ = Total_Active_MIDs  diao = DIAO ;
run ;
proc sql ; drop table tlc_Current_SMB_&i. ; quit ;
%end ;
proc sql ;
 select memname into :TLC_SUMS Separated by ' ' from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUM_%' ;
quit ;
data tlc_sum ; set &tlc_sums. ;
  Total_Active_MIDs = Total_Active_MIDs - ATTRN ;
  DIAO = DIAO - Attrn_DIAO ;
  TLC = ((Attrn_RTM_DIAO/12)/DIAO)*12;
run ;
proc sort data = tlc_sum ; by Period ; run ;
Title "Overall Report for USA CAM Month: &&prd&P_CNT." ;
	proc print data = tlc_sum ; run ;
title ;
proc datasets lib = work NoDetails NoList ; delete tlc_sum &tlc_sums. ; Quit ;
%mend usa_smb_mth_attrn_output ;
*%usa_smb_rdc_mth_attrn_output ;

/*

data cam_wach_tlc;
 set tlc_current_17 ;
 where CAM_GRPS = 'Union Bank' and ATTRN = 1 ;
run ;

proc means data = cam_wach_tlc sum  maxdec=0; 
	class CLOSE_CODE_DES ;
	var attrn_RTM_DIAO ;
run ;

proc sort data = cam_wach_tlc ;
 by  attrn_RTM_DIAO ;
run;

proc freq data=cam_wach_tlc;
   tables Attrn_RTM_DIAO / noprint out=Failure2;
run;




proc pareto data=Failure2;
   vbar Attrn_RTM_DIAO / freq     = Count
                scale    = count
                interbar = 1.0
                last     = 'Miscellaneous'
                nlegend  = 'Total Circuits'
                cframenleg;
run;


*/



/* -------------------- *//* ---------------- *//* -------------------- */
/* -------------------- *//* ---------------- *//* -------------------- */
/*
   _____ _                            _   _______ _      _____   _____       _            
  / ____| |                          | | |__   __| |    / ____| |  __ \     | |           
 | |    | |__   __ _ _ __  _ __   ___| |    | |  | |   | |      | |__) |__ _| |_ ___  ___ 
 | |    | '_ \ / _` | '_ \| '_ \ / _ \ |    | |  | |   | |      |  _  // _` | __/ _ \/ __|
 | |____| | | | (_| | | | | | | |  __/ |    | |  | |___| |____  | | \ \ (_| | ||  __/\__ \
  \_____|_| |_|\__,_|_| |_|_| |_|\___|_|    |_|  |______\_____| |_|  \_\__,_|\__\___||___/
                                                                                          
                                                                                          
*/
/* -------------------- *//* ---------------- *//* -------------------- */
/* -------------------- *//* ---------------- *//* -------------------- */


%macro na_mth_attrn_channel_dataprep;

/* Total MIDs (Active & Inactive) */

%do i = 2 %to &P_CNT. ;
Proc Summary data = tlc_Current_&i. ;	 
 class channel;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO Active_Current_Month;  
 Output Out=tlc_sumz_&i. Sum =  ;
Run ;
data tlc_sumz_&i.; Retain Period; Format Period date9.;
 set tlc_sumz_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol); Period = "&&prd&i."D; 
 Rename _FREQ_ = Total_Active_MIDs  diao=DIAO;
run;
%end;
proc sql;
 select memname into :TLC_SUMS Separated by ' ' from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUMZ_%' ;
quit;
data tlc_sum; set &tlc_sums.;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN;
 DIAO = DIAO - Attrn_DIAO;
 if period = . then delete;
 if channel = '' then Channel ='OVLL';
 if Total_Active_MIDs = . then Total_Active_MIDs = 0;
 if Active_Current_Month = . then Active_Current_Month = 0;
 Format Channel_Name $35.;      
      if Channel = 'OVLL' then Channel_Name = '01 Overall';
 else if Channel = 'ALLI' then Channel_Name = '02 Alliance';
 else if Channel = 'MSP'  then Channel_Name = '03 Member Service Provider';
 else if Channel = 'ASSN' then Channel_Name = '04 Associations';
 else if Channel = 'CBS'  then Channel_Name = '05 Community Bank Sales';
 else if Channel = 'NOVA' then Channel_Name = '06 Elavon "House" Accounts';
 else if Channel = 'FHMS' then Channel_Name = '07 First Horizon Merchant Services';
 else if Channel = 'HCM'  then Channel_Name = '08 Healthcare';
 else if Channel = 'DIR'  then Channel_Name = '09 Direct';
 else if Channel = 'ISVD' then Channel_Name = '10 Independent Service Vendor';
 else if Channel = 'CAN'  then Channel_Name = '11 Canada';
 else if Channel = 'AIR'  then Channel_Name = '12 Airlines';
 if channel in ('CPOS','EXCL', 'OPAY') then delete;

 Keep Period Channel_Name Active_Current_Month ; 
run;
proc sort data = tlc_sum; by Period; run;
proc Sort data = tlc_sum ;  by period channel_name Active_Current_Month; run ;
proc Sort data = tlc_sum;  by channel_name descending period; run ;
Proc Transpose data= tlc_sum out=tp_tlc_sum;
	var Active_Current_Month ;
	by Channel_Name;
	id period;
Run;
data Total_MIDs; set tp_tlc_sum; drop _name_ ; run;
proc datasets lib=work NoDetails NoList; delete &tlc_sums. tp_tlc_sum tlc_sum; Quit;

/* Active MIDs */

%do i = 2 %to &P_CNT. ;
Proc Summary data = tlc_Current_&i. ;	 
 class channel;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO Active_Acct;  
 Output Out=tlc_sumz_&i. Sum =  ;
Run ;
data tlc_sumz_&i.; Retain Period; Format Period date9.;
 set tlc_sumz_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol); Period = "&&prd&i."D; 
 Rename _FREQ_ = Total_Active_MIDs  diao=DIAO;
run;
%end;
proc sql;
 select memname into :TLC_SUMS Separated by ' ' from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUMZ_%' ;
quit;
data tlc_sum; set &tlc_sums.;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN;
 DIAO = DIAO - Attrn_DIAO;
 if period = . then delete;
 if channel = '' then Channel ='OVLL';
 if Total_Active_MIDs = . then Total_Active_MIDs = 0;
 if Active_Acct = . then Active_Acct = 0;
 Format Channel_Name $35.;      
      if Channel = 'OVLL' then Channel_Name = '01 Overall';
 else if Channel = 'ALLI' then Channel_Name = '02 Alliance';
 else if Channel = 'MSP'  then Channel_Name = '03 Member Service Provider';
 else if Channel = 'ASSN' then Channel_Name = '04 Associations';
 else if Channel = 'CBS'  then Channel_Name = '05 Community Bank Sales';
 else if Channel = 'NOVA' then Channel_Name = '06 Elavon "House" Accounts';
 else if Channel = 'FHMS' then Channel_Name = '07 First Horizon Merchant Services';
 else if Channel = 'HCM'  then Channel_Name = '08 Healthcare';
 else if Channel = 'DIR'  then Channel_Name = '09 Direct';
 else if Channel = 'ISVD' then Channel_Name = '10 Independent Service Vendor';
 else if Channel = 'CAN'  then Channel_Name = '11 Canada';
 else if Channel = 'AIR'  then Channel_Name = '12 Airlines';
 if channel in ('CPOS','EXCL', 'OPAY') then delete;

 Keep Period Channel_Name Active_Acct ; 
run;
proc sort data = tlc_sum; by Period; run;
proc Sort data = tlc_sum ;  by period channel_name Active_Acct; run ;
proc Sort data = tlc_sum;  by channel_name descending period; run ;
Proc Transpose data= tlc_sum out=tp_tlc_sum;
	var Active_Acct ;
	by Channel_Name;
	id period;
Run;
data Active_MIDs ; set tp_tlc_sum; drop _name_ ; run;
proc datasets lib=work NoDetails NoList; delete &tlc_sums. tp_tlc_sum tlc_sum; Quit;

/* Inactive MIDs */

%do i = 2 %to &P_CNT. ;
Proc Summary data = tlc_Current_&i. ;	 
 class channel;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO InActive_Acct;  
 Output Out=tlc_sumz_&i. Sum =  ;
Run ;
data tlc_sumz_&i.; Retain Period; Format Period date9.;
 set tlc_sumz_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol); Period = "&&prd&i."D; 
 Rename _FREQ_ = Total_Active_MIDs  diao=DIAO;
run;
%end;
proc sql;
 select memname into :TLC_SUMS Separated by ' ' from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUMZ_%' ;
quit;
data tlc_sum; set &tlc_sums.;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN;
 DIAO = DIAO - Attrn_DIAO;
 if period = . then delete;
 if channel = '' then Channel ='OVLL';
 if Total_Active_MIDs = . then Total_Active_MIDs = 0;
 if INActive_Acct = . then INActive_Acct = 0;
 Format Channel_Name $35.;      
      if Channel = 'OVLL' then Channel_Name = '01 Overall';
 else if Channel = 'ALLI' then Channel_Name = '02 Alliance';
 else if Channel = 'MSP'  then Channel_Name = '03 Member Service Provider';
 else if Channel = 'ASSN' then Channel_Name = '04 Associations';
 else if Channel = 'CBS'  then Channel_Name = '05 Community Bank Sales';
 else if Channel = 'NOVA' then Channel_Name = '06 Elavon "House" Accounts';
 else if Channel = 'FHMS' then Channel_Name = '07 First Horizon Merchant Services';
 else if Channel = 'HCM'  then Channel_Name = '08 Healthcare';
 else if Channel = 'DIR'  then Channel_Name = '09 Direct';
 else if Channel = 'ISVD' then Channel_Name = '10 Independent Service Vendor';
 else if Channel = 'CAN'  then Channel_Name = '11 Canada';
 else if Channel = 'AIR'  then Channel_Name = '12 Airlines';
 if channel in ('CPOS','EXCL', 'OPAY') then delete;

 Keep Period Channel_Name inActive_Acct ; 
run;
proc sort data = tlc_sum; by Period; run;
proc Sort data = tlc_sum ;  by period channel_name inActive_Acct; run ;
proc Sort data = tlc_sum;  by channel_name descending period; run ;
Proc Transpose data= tlc_sum out=tp_tlc_sum;
	var inActive_Acct ;
	by Channel_Name;
	id period;
Run;
data Inactive_MIDs; set tp_tlc_sum; drop _name_ ; run;
proc datasets lib=work NoDetails NoList; delete &tlc_sums. tp_tlc_sum tlc_sum; Quit;

/* Attrn Accounts */

%do i = 2 %to &P_CNT. ;
Proc Summary data = tlc_Current_&i. ;	 
 class channel;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO InActive_Acct;  
 Output Out=tlc_sumz_&i. Sum =  ;
Run ;
data tlc_sumz_&i.; Retain Period; Format Period date9.;
 set tlc_sumz_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol); Period = "&&prd&i."D; 
 Rename _FREQ_ = Total_Active_MIDs  diao=DIAO;
run;
%end;
proc sql;
 select memname into :TLC_SUMS Separated by ' ' from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUMZ_%' ;
quit;
data tlc_sum; set &tlc_sums.;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN;
 DIAO = DIAO - Attrn_DIAO;
 if period = . then delete;
 if channel = '' then Channel ='OVLL';
 if Total_Active_MIDs = . then Total_Active_MIDs = 0;
 if INActive_Acct = . then INActive_Acct = 0;
 if ATTRN = . then ATTRN = 0;
 Format Channel_Name $35.;      
      if Channel = 'OVLL' then Channel_Name = '01 Overall';
 else if Channel = 'ALLI' then Channel_Name = '02 Alliance';
 else if Channel = 'MSP'  then Channel_Name = '03 Member Service Provider';
 else if Channel = 'ASSN' then Channel_Name = '04 Associations';
 else if Channel = 'CBS'  then Channel_Name = '05 Community Bank Sales';
 else if Channel = 'NOVA' then Channel_Name = '06 Elavon "House" Accounts';
 else if Channel = 'FHMS' then Channel_Name = '07 First Horizon Merchant Services';
 else if Channel = 'HCM'  then Channel_Name = '08 Healthcare';
 else if Channel = 'DIR'  then Channel_Name = '09 Direct';
 else if Channel = 'ISVD' then Channel_Name = '10 Independent Service Vendor';
 else if Channel = 'CAN'  then Channel_Name = '11 Canada';
 else if Channel = 'AIR'  then Channel_Name = '12 Airlines';
 if channel in ('CPOS','EXCL', 'OPAY') then delete;

 Keep Period Channel_Name ATTRN ; 
run;
proc sort data = tlc_sum; by Period; run;
proc Sort data = tlc_sum ;  by period channel_name ATTRN; run ;
proc Sort data = tlc_sum;  by channel_name descending period; run ;
Proc Transpose data= tlc_sum out=tp_tlc_sum;
	var ATTRN ;
	by Channel_Name;
	id period;
Run;
data ATTRN_MIDs; set tp_tlc_sum; drop _name_ ; run;
proc datasets lib=work NoDetails NoList; delete &tlc_sums. tp_tlc_sum tlc_sum; Quit;

/* Period DIAO for Total Active/Inactive MIDs */

%do i = 2 %to &P_CNT. ;
Proc Summary data = tlc_Current_&i. ;	 
 class channel;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO InActive_Acct;  
 Output Out=tlc_sumz_&i. Sum =  ;
Run ;
data tlc_sumz_&i.; Retain Period; Format Period date9.;
 set tlc_sumz_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol); Period = "&&prd&i."D; 
 Rename _FREQ_ = Total_Active_MIDs  diao=DIAO;
run;
%end;
proc sql;
 select memname into :TLC_SUMS Separated by ' ' from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUMZ_%' ;
quit;
data tlc_sum; set &tlc_sums.;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN;
 DIAO = DIAO - Attrn_DIAO;
 if period = . then delete;
 if channel = '' then Channel ='OVLL';
 if Total_Active_MIDs = . then Total_Active_MIDs = 0;
 if INActive_Acct = . then INActive_Acct = 0;
 if ATTRN = . then ATTRN = 0;
 if DIAO = . then DIAO = 0;
 Format Channel_Name $35.;      
      if Channel = 'OVLL' then Channel_Name = '01 Overall';
 else if Channel = 'ALLI' then Channel_Name = '02 Alliance';
 else if Channel = 'MSP'  then Channel_Name = '03 Member Service Provider';
 else if Channel = 'ASSN' then Channel_Name = '04 Associations';
 else if Channel = 'CBS'  then Channel_Name = '05 Community Bank Sales';
 else if Channel = 'NOVA' then Channel_Name = '06 Elavon "House" Accounts';
 else if Channel = 'FHMS' then Channel_Name = '07 First Horizon Merchant Services';
 else if Channel = 'HCM'  then Channel_Name = '08 Healthcare';
 else if Channel = 'DIR'  then Channel_Name = '09 Direct';
 else if Channel = 'ISVD' then Channel_Name = '10 Independent Service Vendor';
 else if Channel = 'CAN'  then Channel_Name = '11 Canada';
 else if Channel = 'AIR'  then Channel_Name = '12 Airlines';
 if channel in ('CPOS','EXCL', 'OPAY') then delete;

 Keep Period Channel_Name DIAO ; 
run;
proc sort data = tlc_sum; by Period; run;
proc Sort data = tlc_sum ;  by period channel_name DIAO; run ;
proc Sort data = tlc_sum;  by channel_name descending period; run ;
Proc Transpose data= tlc_sum out=tp_tlc_sum;
	var DIAO ;
	by Channel_Name;
	id period;
Run;
data PRD_DIAO_MIDs; set tp_tlc_sum; drop _name_ ; run;
proc datasets lib=work NoDetails NoList; delete &tlc_sums. tp_tlc_sum tlc_sum; Quit;

/* Month Average DIAO for Attrn MIDs */

%do i = 2 %to &P_CNT. ;
Proc Summary data = tlc_Current_&i. ;	 
 class channel;
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO InActive_Acct;  
 Output Out=tlc_sumz_&i. Sum =  ;
Run ;
data tlc_sumz_&i.; Retain Period; Format Period date9.;
 set tlc_sumz_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol); Period = "&&prd&i."D; 
 Rename _FREQ_ = Total_Active_MIDs  diao=DIAO;
run;
%end;
proc sql;
 select memname into :TLC_SUMS Separated by ' ' from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUMZ_%' ;
quit;
data tlc_sum; set &tlc_sums.;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN;
 DIAO = DIAO - Attrn_DIAO;
 if period = . then delete;
 if channel = '' then Channel ='OVLL';
 if Total_Active_MIDs = . then Total_Active_MIDs = 0;
 if INActive_Acct = . then INActive_Acct = 0;
 if ATTRN = . then ATTRN = 0;
 if DIAO = . then DIAO = 0;
 if Attrn_RTM_DIAO = . then Attrn_RTM_DIAO = 0;
 Mth_Avg_DIAO = Attrn_RTM_DIAO / 12;
 Format Channel_Name $35.;      
      if Channel = 'OVLL' then Channel_Name = '01 Overall';
 else if Channel = 'ALLI' then Channel_Name = '02 Alliance';
 else if Channel = 'MSP'  then Channel_Name = '03 Member Service Provider';
 else if Channel = 'ASSN' then Channel_Name = '04 Associations';
 else if Channel = 'CBS'  then Channel_Name = '05 Community Bank Sales';
 else if Channel = 'NOVA' then Channel_Name = '06 Elavon "House" Accounts';
 else if Channel = 'FHMS' then Channel_Name = '07 First Horizon Merchant Services';
 else if Channel = 'HCM'  then Channel_Name = '08 Healthcare';
 else if Channel = 'DIR'  then Channel_Name = '09 Direct';
 else if Channel = 'ISVD' then Channel_Name = '10 Independent Service Vendor';
 else if Channel = 'CAN'  then Channel_Name = '11 Canada';
 else if Channel = 'AIR'  then Channel_Name = '12 Airlines';
 if channel in ('CPOS','EXCL', 'OPAY') then delete;

 Keep Period Channel_Name Mth_Avg_DIAO ; 
run;
proc sort data = tlc_sum; by Period; run;
proc Sort data = tlc_sum ;  by period channel_name Mth_Avg_DIAO; run ;
proc Sort data = tlc_sum;  by channel_name descending period; run ;
Proc Transpose data= tlc_sum out=tp_tlc_sum;
	var Mth_Avg_DIAO ;
	by Channel_Name;
	id period;
Run;
data RTM_DIAO_MIDs; set tp_tlc_sum; drop _name_ ; run;
proc datasets lib=work NoDetails NoList; delete &tlc_sums. tp_tlc_sum tlc_sum; Quit;

%mend na_mth_attrn_channel_dataprep;
/* %na_mth_attrn_channel_dataprep */

%Macro na_mth_attrn_channel_output;

Title1 "Overall Channel Report for Month: &&prd&P_CNT.";
Title2 "Metric: Total MIDs";
Title3 "Table 01";
	proc print data = Total_MIDs	noobs ; run;
title;

Title1 "Overall Channel Report for Month: &&prd&P_CNT.";
Title2 "Metric: Active MIDs";
Title3 "Table 02";
	proc print data = Active_MIDs	noobs ; run;
title;

Title1 "Overall Channel Report for Month: &&prd&P_CNT.";
Title2 "Metric: Period DIAO for Total MIDs";
Title3 "Table 03";
	proc print data = PRD_DIAO_MIDs	noobs ; run;
title;

Title1 "Overall Channel Report for Month: &&prd&P_CNT.";
Title2 "Metric: Mth Avg. DIAO for Attrn MIDs";
Title3 "Table 04";
	proc print data = RTM_DIAO_MIDs	noobs ; run;
title;

Title1 "Overall Channel Report for Month: &&prd&P_CNT.";
Title2 "Metric: Attrn MIDs";
Title3 "Table 06";
	proc print data = Attrn_MIDs	noobs ; run;
title;

Title1 "Overall Channel Report for Month: &&prd&P_CNT.";
Title2 "Metric: Inactive MIDs";
Title3 "Table 07";
	proc print data = Inactive_MIDs	noobs ; run;
title;

proc datasets lib=work NoDetails NoList; 
	delete Total_MIDs Active_MIDs PRD_DIAO_MIDs RTM_DIAO_MIDs Attrn_MIDs Inactive_MIDs; 
Quit;
%Mend na_mth_attrn_channel_output;
/* %na_mth_attrn_channel_output */

/*
 __      __   _          
 \ \    / /  (_)         
  \ \  / /__  _  ___ ___ 
   \ \/ / _ \| |/ __/ _ \
    \  / (_) | | (_|  __/
     \/ \___/|_|\___\___|                                                  
         __ 
        / _|
   ___ | |_ 
  / _ \|  _|
 | (_) | |  
  \___/|_|  
   _____          _                            
  / ____|        | |                           
 | |    _   _ ___| |_ ___  _ __ ___   ___ _ __ 
 | |   | | | / __| __/ _ \| '_ ` _ \ / _ \ '__|
 | |___| |_| \__ \ || (_) | | | | | |  __/ |   
  \_____\__,_|___/\__\___/|_| |_| |_|\___|_|   
                                               

 __      ______   _____   _______ _      _____   __  __                                                    _   
 \ \    / / __ \ / ____| |__   __| |    / ____| |  \/  |                                                  | |  
  \ \  / / |  | | |         | |  | |   | |      | \  / | ___  __ _ ___ _   _ _ __ ___ _ __ ___   ___ _ __ | |_ 
   \ \/ /| |  | | |         | |  | |   | |      | |\/| |/ _ \/ _` / __| | | | '__/ _ \ '_ ` _ \ / _ \ '_ \| __|
    \  / | |__| | |____     | |  | |___| |____  | |  | |  __/ (_| \__ \ |_| | | |  __/ | | | | |  __/ | | | |_ 
     \/   \____/ \_____|    |_|  |______\_____| |_|  |_|\___|\__,_|___/\__,_|_|  \___|_| |_| |_|\___|_| |_|\__|
                                                                                                               
*/

%macro VOC_na_mth_attrn_output;
%do i = 2 %to &P_CNT. ;
Proc Summary data = tlc_Current_&i. ;	 
 var ATTRN VOL DIAO Attrn_VOL Attrn_DIAO Attrn_RTM_VOL Attrn_RTM_DIAO ;
 Class VOC_CC_GRP;
 Output Out=tlc_sum_&i. Sum =  ; Run ;
data tlc_sum_&i. ; Retain Period ;  Format Period date9. ;
 set tlc_sum_&i. (drop= _type_ vol attrn_vol attrn_rtm_vol) ; 
 Period = "&&prd&i."D ;  Rename _FREQ_ = Total_Active_MIDs  diao=DIAO ; run ;
%end ;
proc sql ;
 select memname into :TLC_SUMS Separated by ' '  from dictionary.tables 
 where libname = 'WORK' and memname like 'TLC_SUM_%' ; quit ;
data tlc_sum ;  set &tlc_sums. ;
 Total_Active_MIDs = Total_Active_MIDs - ATTRN ;
 DIAO = DIAO - Attrn_DIAO ; run ;
proc sort data = tlc_sum ; by Period ; run ;
Title "Overall Report for Month: &&prd&P_CNT." ;
 proc print data = tlc_sum ; run ; title;
proc datasets lib = work NoDetails NoList ;
 delete tlc_sum &tlc_sums. ; Quit ;
%mend VOC_na_mth_attrn_output ;
*%VOC_na_mth_attrn_output;

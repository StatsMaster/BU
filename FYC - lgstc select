

/* 
	Goal:
     Eval many model to select the model which has the right balance of 
     performance & complexity
*/


%let IM = 
V83
V34
V51
V65
V66
V67
V70
V71
V14
V13
V75
V76
V78
V54
V55
V58
V59
V60
V61
V21
V23
V9
V85
V87
V88
V90
V92
V93
V95
V11
V12
V129
V132
V153
V172
V190
V219
V247
V248
V255
V276
V339
V350
V354
V425
V485
V635
V695
V725
V755
V820
V875
;

%let RSP  = quick_close;
%let TDS  = rename_T ;
%let VDS  = rename_V ;

ods output Bestsubsets=score;
Proc Logistic data = &TDS. ;
     model &RSP. (event='1')  = &IM.
	/ Selection = Score  best = 6 ;
Run ;
 
proc sql noprint ;
     select variablesinmodel  into :inputs1     - :inputs99999  from score ;
     select numberofvariables into :ic1         - :ic99999      from score ;
quit ;
 
%let lastindex = &SQLOBS ;
 
/* ::RHO:: The sample proportion */
/* ::PI::  The population proportion */
 
/*
     These two figure would be different if
     we had over sampled for the EVENT.
     You would over sample if the EVENT was rare.
     This EVENT, customer attrition occurs to 20% of the customers
     so we do not need to over sample for ATTRN.
*/
 
Proc SQL;
     select  Mean(&RSP.) into :rho1 From &TDS. ;
     select  Mean(&RSP.) into :pi1  From &TDS. ;
quit;
 
%let rho0 = %Sysevalf(1-&rho1);
%let pi0  = %Sysevalf(1-&pi1);
 
/* ::pf11:: The value of making a correct decision - IDing an ATTRN customer | ( + Customer Revenue - Rention Action Cost)  */
/* ::pf01:: The cost of not IDind an ATTRN customer | ( - Customer Revenue) */
/* ::pf10:: The cost of trying to retain a customer who was not going to attrite ( - Rention Action Cost ) */
/* ::pf00:: The value of not trying a customer who was not going to leave */
 
%let pf11 = 820;    %let pf01 = -780;
%let pf10 = 0;      %let pf00 = 0;
 
%Macro Assess(Data=, inputcount=, inputsinmodel=, index=);
 
proc sort data = scored&data; by descending P_1; run;
 
data assess;
 
attrib DATAROLE length=$5.;
retain sse 0 csum 0 datarole "&data";
array n[0:1,0:1]    _temporary_ (0 0 0 0);
array w[0:1]        _temporary_     (%sysevalf(&pi0 / &rho0) %sysevalf(&pi1 / &rho1));
Keep Datarole Input_Count Index Total_Profit Overall_Avg_Profit ASE C;
 
Set Scored&Data end = last ;
 
d1 = &PF11.*p_1 + &PF01. * p_0 ;
d0 = &PF10.*p_1 + &PF00. * p_0 ;
t = (strip(&RSP.) = "1");
d = (d1 > d0);
n[t,d] + w[t];
sse + (&RSP. - p_1) ** 2;
csum + ((n[1,1]+n[1,0])*(1-t)*w[0]);
 
 if last then do;
    Input_Count          = &Inputcount;
     Total_Profit         = sum(&PF11*n[1,1],&PF10*n[1,0],&PF01*n[0,1],&PF00*n[0,0]);
     Overall_Avg_Profit  = Total_Profit   / sum(n[1,1],n[1,0],n[0,1],n[0,0]);
     ASE                        = sse                / sum(n[1,1],n[1,0],n[0,1],n[0,0]);
     C                          = csum / (sum(n[0,0], n[0,1]) * sum(n[1,0],n[1,1]));
     index = &index ;
     Output;
end;
 
run;

proc append base = results data = assess force; run;
 
%mend assess;
 
%macro fitandscore();
proc datasets library = work NoDetails NoList; Delete results;
%do Model_indx = 1 %to &lastindex. ;
    %let im = &&inputs&model_indx ;
     %let ic = &&ic&model_indx ;
     Proc Logistic data = &TDS. ;
           model &RSP. (event='1')  = &IM. ;
           score data = &TDS. out = ScoredT (Keep = &RSP. P_1 P_0) PriorEvent=&Pi1;
           score data = &VDS. out = ScoredV (Keep = &RSP. P_1 P_0) PriorEvent=&Pi1;
     run;
     %assess(Data=T, InputCount = &ic., InputsInModel = &im., index = &model_indx. )
     %assess(Data=V, InputCount = &ic., InputsInModel = &im., index = &model_indx. )
%end;
%mend fitandscore;

%fitandscore
 
/* Classification Ability of the Model */
 
symbol1 i = join f = arial v = c h = 1.5 c = darkred l = 1 ;
symbol2 i = join f = arial v = c h = 1.5 c = red           l = 2 ;
proc gplot data = results;
     *where index le 50 ;
     plot c*index = datarole / ;*vref = .784 .780;
run; quit;
 
/* Profit Ability of the Model */
 
symbol1 i = join f = arial v = $ h = 1.5 c = darkred w = 2 l = 1 ;
symbol2 i = join f = arial v = $ h = 1.5 c = red      w = 2     l = 2 ;
proc gplot data = results;
     *where index > 12 ;
     plot Overall_Avg_Profit*index = datarole / vref = 1.234;
run; quit;
 
/* Examine Selected Model */
 
proc logistic data = ATI ;
     model &RSP. (event='1')  = &inputs50. / STB  ;
     score data = AVI out = SAVI;
run;
